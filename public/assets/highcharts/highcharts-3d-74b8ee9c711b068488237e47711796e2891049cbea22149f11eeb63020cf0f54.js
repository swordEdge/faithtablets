"use strict";!function(factory){"object"==typeof module&&module.exports?module.exports=factory:factory(Highcharts)}(function(Highcharts){var H,perspective,pick;!function(H){function rotate3D(x,y,z,angles){return{x:angles.cosB*x-angles.sinB*z,y:-angles.sinA*angles.sinB*x+angles.cosA*y-angles.cosB*angles.sinA*z,z:angles.cosA*angles.sinB*x+angles.sinA*y+angles.cosA*angles.cosB*z}}function perspective3D(coordinate,origin,distance){var projection=0<distance&&distance<Number.POSITIVE_INFINITY?distance/(coordinate.z+origin.z+distance):1;return{x:coordinate.x*projection,y:coordinate.y*projection}}var deg2rad=H.deg2rad,pick=H.pick;H.perspective=function(points,chart,insidePlotArea){var options3d=chart.options.chart.options3d,inverted=!!insidePlotArea&&chart.inverted,origin={x:chart.plotWidth/2,y:chart.plotHeight/2,z:options3d.depth/2,vd:pick(options3d.depth,1)*pick(options3d.viewDistance,0)},scale=chart.scale3d||1,beta=deg2rad*options3d.beta*(inverted?-1:1),alpha=deg2rad*options3d.alpha*(inverted?-1:1),angles={cosA:Math.cos(alpha),cosB:Math.cos(-beta),sinA:Math.sin(alpha),sinB:Math.sin(-beta)};return insidePlotArea||(origin.x+=chart.plotLeft,origin.y+=chart.plotTop),H.map(points,function(point){var rotated=rotate3D((inverted?point.y:point.x)-origin.x,(inverted?point.x:point.y)-origin.y,(point.z||0)-origin.z,angles),coordinate=perspective3D(rotated,origin,origin.vd);return coordinate.x=coordinate.x*scale+origin.x,coordinate.y=coordinate.y*scale+origin.y,coordinate.z=rotated.z*scale+origin.z,{x:inverted?coordinate.y:coordinate.x,y:inverted?coordinate.x:coordinate.y,z:coordinate.z}})},H.pointCameraDistance=function(coordinates,chart){var options3d=chart.options.chart.options3d,cameraPosition={x:chart.plotWidth/2,y:chart.plotHeight/2,z:pick(options3d.depth,1)*pick(options3d.viewDistance,0)+options3d.depth};return Math.sqrt(Math.pow(cameraPosition.x-coordinates.plotX,2)+Math.pow(cameraPosition.y-coordinates.plotY,2)+Math.pow(cameraPosition.z-coordinates.plotZ,2))},H.shapeArea=function(vertexes){var i,j,area=0;for(i=0;i<vertexes.length;i++)j=(i+1)%vertexes.length,area+=vertexes[i].x*vertexes[j].y-vertexes[j].x*vertexes[i].y;return area/2},H.shapeArea3d=function(vertexes,chart,insidePlotArea){return H.shapeArea(H.perspective(vertexes,chart,insidePlotArea))}}(Highcharts),function(H){function curveTo(cx,cy,rx,ry,start,end,dx,dy){var result=[],arcAngle=end-start;return start<end&&end-start>Math.PI/2+1e-4?result=(result=result.concat(curveTo(cx,cy,rx,ry,start,start+Math.PI/2,dx,dy))).concat(curveTo(cx,cy,rx,ry,start+Math.PI/2,end,dx,dy)):end<start&&start-end>Math.PI/2+1e-4?result=(result=result.concat(curveTo(cx,cy,rx,ry,start,start-Math.PI/2,dx,dy))).concat(curveTo(cx,cy,rx,ry,start-Math.PI/2,end,dx,dy)):["C",cx+rx*Math.cos(start)-rx*dFactor*arcAngle*Math.sin(start)+dx,cy+ry*Math.sin(start)+ry*dFactor*arcAngle*Math.cos(start)+dy,cx+rx*Math.cos(end)+rx*dFactor*arcAngle*Math.sin(end)+dx,cy+ry*Math.sin(end)-ry*dFactor*arcAngle*Math.cos(end)+dy,cx+rx*Math.cos(end)+dx,cy+ry*Math.sin(end)+dy]}var cos=Math.cos,PI=Math.PI,sin=Math.sin,animObject=H.animObject,charts=H.charts,color=H.color,defined=H.defined,deg2rad=H.deg2rad,each=H.each,extend=H.extend,inArray=H.inArray,map=H.map,merge=H.merge,perspective=H.perspective,pick=H.pick,SVGElement=H.SVGElement,SVGRenderer=H.SVGRenderer,wrap=H.wrap,dFactor=4*(Math.sqrt(2)-1)/3/(PI/2);SVGRenderer.prototype.toLinePath=function(points,closed){var result=[];return each(points,function(point){result.push("L",point.x,point.y)}),points.length&&(result[0]="M",closed&&result.push("Z")),result},SVGRenderer.prototype.toLineSegments=function(points){var result=[],m=!0;return each(points,function(point){result.push(m?"M":"L",point.x,point.y),m=!m}),result},SVGRenderer.prototype.face3d=function(args){var renderer=this,ret=this.createElement("path");return ret.vertexes=[],ret.insidePlotArea=!1,ret.enabled=!0,wrap(ret,"attr",function(proceed,hash){if("object"==typeof hash&&(defined(hash.enabled)||defined(hash.vertexes)||defined(hash.insidePlotArea))){this.enabled=pick(hash.enabled,this.enabled),this.vertexes=pick(hash.vertexes,this.vertexes),this.insidePlotArea=pick(hash.insidePlotArea,this.insidePlotArea),delete hash.enabled,delete hash.vertexes,delete hash.insidePlotArea;var chart=charts[renderer.chartIndex],vertexes2d=perspective(this.vertexes,chart,this.insidePlotArea),path=renderer.toLinePath(vertexes2d,!0),area=H.shapeArea(vertexes2d),visibility=this.enabled&&0<area?"visible":"hidden";hash.d=path,hash.visibility=visibility}return proceed.apply(this,[].slice.call(arguments,1))}),wrap(ret,"animate",function(proceed,params){if("object"==typeof params&&(defined(params.enabled)||defined(params.vertexes)||defined(params.insidePlotArea))){this.enabled=pick(params.enabled,this.enabled),this.vertexes=pick(params.vertexes,this.vertexes),this.insidePlotArea=pick(params.insidePlotArea,this.insidePlotArea),delete params.enabled,delete params.vertexes,delete params.insidePlotArea;var chart=charts[renderer.chartIndex],vertexes2d=perspective(this.vertexes,chart,this.insidePlotArea),path=renderer.toLinePath(vertexes2d,!0),area=H.shapeArea(vertexes2d),visibility=this.enabled&&0<area?"visible":"hidden";params.d=path,this.attr("visibility",visibility)}return proceed.apply(this,[].slice.call(arguments,1))}),ret.attr(args)},SVGRenderer.prototype.polyhedron=function(args){var renderer=this,result=this.g(),destroy=result.destroy;return result.attr({"stroke-linejoin":"round"}),result.faces=[],result.destroy=function(){for(var i=0;i<result.faces.length;i++)result.faces[i].destroy();return destroy.call(this)},wrap(result,"attr",function(proceed,hash,val,complete,continueAnimation){if("object"==typeof hash&&defined(hash.faces)){for(;result.faces.length>hash.faces.length;)result.faces.pop().destroy();for(;result.faces.length<hash.faces.length;)result.faces.push(renderer.face3d().add(result));for(var i=0;i<hash.faces.length;i++)result.faces[i].attr(hash.faces[i],null,complete,continueAnimation);delete hash.faces}return proceed.apply(this,[].slice.call(arguments,1))}),wrap(result,"animate",function(proceed,params,duration,complete){if(params&&params.faces){for(;result.faces.length>params.faces.length;)result.faces.pop().destroy();for(;result.faces.length<params.faces.length;)result.faces.push(renderer.face3d().add(result));for(var i=0;i<params.faces.length;i++)result.faces[i].animate(params.faces[i],duration,complete);delete params.faces}return proceed.apply(this,[].slice.call(arguments,1))}),result.attr(args)},SVGRenderer.prototype.cuboid=function(shapeArgs){var result=this.g(),destroy=result.destroy,paths=this.cuboidPath(shapeArgs);return result.attr({"stroke-linejoin":"round"}),result.front=this.path(paths[0]).attr({"class":"highcharts-3d-front"}).add(result),result.top=this.path(paths[1]).attr({"class":"highcharts-3d-top"}).add(result),result.side=this.path(paths[2]).attr({"class":"highcharts-3d-side"}).add(result),result.fillSetter=function(fill){return this.front.attr({fill:fill}),this.top.attr({fill:color(fill).brighten(.1).get()}),this.side.attr({fill:color(fill).brighten(-.1).get()}),this.color=fill,result.fill=fill,this},result.opacitySetter=function(opacity){return this.front.attr({opacity:opacity}),this.top.attr({opacity:opacity}),this.side.attr({opacity:opacity}),this},result.attr=function(args,val,complete,continueAnimation){if("string"==typeof args&&void 0!==val){var key=args;(args={})[key]=val}if(!args.shapeArgs&&!defined(args.x))return SVGElement.prototype.attr.call(this,args,undefined,complete,continueAnimation);var shapeArgs=args.shapeArgs||args,paths=this.renderer.cuboidPath(shapeArgs);return this.front.attr({d:paths[0]}),this.top.attr({d:paths[1]}),this.side.attr({d:paths[2]}),this},result.animate=function(args,duration,complete){if(defined(args.x)&&defined(args.y)){var paths=this.renderer.cuboidPath(args);this.front.animate({d:paths[0]},duration,complete),this.top.animate({d:paths[1]},duration,complete),this.side.animate({d:paths[2]},duration,complete),this.attr({zIndex:-paths[3]})}else args.opacity?(this.front.animate(args,duration,complete),this.top.animate(args,duration,complete),this.side.animate(args,duration,complete)):SVGElement.prototype.animate.call(this,args,duration,complete);return this},result.destroy=function(){return this.front.destroy(),this.top.destroy(),this.side.destroy(),destroy.call(this)},result.attr({zIndex:-paths[3]}),result},H.SVGRenderer.prototype.cuboidPath=function(shapeArgs){function mapPath(i){return pArr[i]}var shape,path1,path2,path3,isFront,isTop,isRight,x=shapeArgs.x,y=shapeArgs.y,z=shapeArgs.z,h=shapeArgs.height,w=shapeArgs.width,d=shapeArgs.depth,chart=charts[this.chartIndex],alpha=chart.options.chart.options3d.alpha,incrementX=1e4,incrementY=10,incrementZ=100,zIndex=0,pArr=[{x:x,y:y,z:z},{x:x+w,y:y,z:z},{x:x+w,y:y+h,z:z},{x:x,y:y+h,z:z},{x:x,y:y+h,z:z+d},{x:x+w,y:y+h,z:z+d},{x:x+w,y:y,z:z+d},{x:x,y:y,z:z+d}];pArr=perspective(pArr,chart,shapeArgs.insidePlotArea);var pickShape=function(path1,path2){var ret=[[],-1];return path1=map(path1,mapPath),path2=map(path2,mapPath),H.shapeArea(path1)<0?ret=[path1,0]:H.shapeArea(path2)<0&&(ret=[path2,1]),ret};return path1=(shape=pickShape([3,2,1,0],[7,6,5,4]))[0],isFront=shape[1],path2=(shape=pickShape([1,6,7,0],[4,5,2,3]))[0],isTop=shape[1],path3=(shape=pickShape([1,2,5,6],[0,7,4,3]))[0],1===(isRight=shape[1])?zIndex+=incrementX*(1e3-x):isRight||(zIndex+=incrementX*x),zIndex+=incrementY*(!isTop||0<=alpha&&alpha<=180||alpha<360&&357.5<alpha?chart.plotHeight-y:10+y),1===isFront?zIndex+=incrementZ*z:isFront||(zIndex+=incrementZ*(1e3-z)),zIndex=-Math.round(zIndex),[this.toLinePath(path1,!0),this.toLinePath(path2,!0),this.toLinePath(path3,!0),zIndex]},H.SVGRenderer.prototype.arc3d=function(attribs){function suckOutCustom(params){var hasCA=!1,ca={};for(var key in params=merge(params))-1!==inArray(key,customAttribs)&&(ca[key]=params[key],delete params[key],hasCA=!0);return!!hasCA&&ca}var wrapper=this.g(),renderer=wrapper.renderer,customAttribs=["x","y","r","innerR","start","end"];return(attribs=merge(attribs)).alpha*=deg2rad,attribs.beta*=deg2rad,wrapper.top=renderer.path(),wrapper.side1=renderer.path(),wrapper.side2=renderer.path(),wrapper.inn=renderer.path(),wrapper.out=renderer.path(),wrapper.onAdd=function(){var parent=wrapper.parentGroup,className=wrapper.attr("class");wrapper.top.add(wrapper),each(["out","inn","side1","side2"],function(face){wrapper[face].attr({"class":className+" highcharts-3d-side"}).add(parent)})},each(["addClass","removeClass"],function(fn){wrapper[fn]=function(){var args=arguments;each(["top","out","inn","side1","side2"],function(face){wrapper[face][fn].apply(wrapper[face],args)})}}),wrapper.setPaths=function(attribs){var paths=wrapper.renderer.arc3dPath(attribs),zIndex=100*paths.zTop;wrapper.attribs=attribs,wrapper.top.attr({d:paths.top,zIndex:paths.zTop}),wrapper.inn.attr({d:paths.inn,zIndex:paths.zInn}),wrapper.out.attr({d:paths.out,zIndex:paths.zOut}),wrapper.side1.attr({d:paths.side1,zIndex:paths.zSide1}),wrapper.side2.attr({d:paths.side2,zIndex:paths.zSide2}),wrapper.zIndex=zIndex,wrapper.attr({zIndex:zIndex}),attribs.center&&(wrapper.top.setRadialReference(attribs.center),delete attribs.center)},wrapper.setPaths(attribs),wrapper.fillSetter=function(value){var darker=color(value).brighten(-.1).get();return this.fill=value,this.side1.attr({fill:darker}),this.side2.attr({fill:darker}),this.inn.attr({fill:darker}),this.out.attr({fill:darker}),this.top.attr({fill:value}),this},each(["opacity","translateX","translateY","visibility"],function(setter){wrapper[setter+"Setter"]=function(value,key){wrapper[key]=value,each(["out","inn","side1","side2","top"],function(el){wrapper[el].attr(key,value)})}}),wrap(wrapper,"attr",function(proceed,params){var ca;return"object"==typeof params&&(ca=suckOutCustom(params))&&(extend(wrapper.attribs,ca),wrapper.setPaths(wrapper.attribs)),proceed.apply(this,[].slice.call(arguments,1))}),wrap(wrapper,"animate",function(proceed,params,animation,complete){var ca,to,anim,from=this.attribs;return delete params.center,delete params.z,delete params.depth,delete params.alpha,delete params.beta,(anim=animObject(pick(animation,this.renderer.globalAnimation))).duration&&(ca=suckOutCustom(params),params.dummy=1,ca&&(to=ca,anim.step=function(a,fx){function interpolate(key){return from[key]+(pick(to[key],from[key])-from[key])*fx.pos}"dummy"===fx.prop&&fx.elem.setPaths(merge(from,{x:interpolate("x"),y:interpolate("y"),r:interpolate("r"),innerR:interpolate("innerR"),start:interpolate("start"),end:interpolate("end")}))}),animation=anim),proceed.call(this,params,animation,complete)}),wrapper.destroy=function(){this.top.destroy(),this.out.destroy(),this.inn.destroy(),this.side1.destroy(),this.side2.destroy(),SVGElement.prototype.destroy.call(this)},wrapper.hide=function(){this.top.hide(),this.out.hide(),this.inn.hide(),this.side1.hide(),this.side2.hide()},wrapper.show=function(){this.top.show(),this.out.show(),this.inn.show(),this.side1.show(),this.side2.show()},wrapper},SVGRenderer.prototype.arc3dPath=function(shapeArgs){function toZeroPIRange(angle){return(angle%=2*Math.PI)>Math.PI&&(angle=2*Math.PI-angle),angle}var cx=shapeArgs.x,cy=shapeArgs.y,start=shapeArgs.start,end=shapeArgs.end-1e-5,r=shapeArgs.r,ir=shapeArgs.innerR,d=shapeArgs.depth,alpha=shapeArgs.alpha,beta=shapeArgs.beta,cs=Math.cos(start),ss=Math.sin(start),ce=Math.cos(end),se=Math.sin(end),rx=r*Math.cos(beta),ry=r*Math.cos(alpha),irx=ir*Math.cos(beta),iry=ir*Math.cos(alpha),dx=d*Math.sin(beta),dy=d*Math.sin(alpha),top=["M",cx+rx*cs,cy+ry*ss];top=(top=(top=(top=top.concat(curveTo(cx,cy,rx,ry,start,end,0,0))).concat(["L",cx+irx*ce,cy+iry*se])).concat(curveTo(cx,cy,irx,iry,end,start,0,0))).concat(["Z"]);var b=0<beta?Math.PI/2:0,a=0<alpha?0:Math.PI/2,start2=-b<start?start:-b<end?-b:start,end2=end<PI-a?end:start<PI-a?PI-a:end,midEnd=2*PI-a,out=["M",cx+rx*cos(start2),cy+ry*sin(start2)];out=out.concat(curveTo(cx,cy,rx,ry,start2,end2,0,0)),midEnd<end&&start<midEnd?out=(out=(out=(out=(out=(out=(out=(out=out.concat(["L",cx+rx*cos(end2)+dx,cy+ry*sin(end2)+dy])).concat(curveTo(cx,cy,rx,ry,end2,midEnd,dx,dy))).concat(["L",cx+rx*cos(midEnd),cy+ry*sin(midEnd)])).concat(curveTo(cx,cy,rx,ry,midEnd,end,0,0))).concat(["L",cx+rx*cos(end)+dx,cy+ry*sin(end)+dy])).concat(curveTo(cx,cy,rx,ry,end,midEnd,dx,dy))).concat(["L",cx+rx*cos(midEnd),cy+ry*sin(midEnd)])).concat(curveTo(cx,cy,rx,ry,midEnd,end2,0,0)):PI-a<end&&start<PI-a&&(out=(out=(out=(out=out.concat(["L",cx+rx*Math.cos(end2)+dx,cy+ry*Math.sin(end2)+dy])).concat(curveTo(cx,cy,rx,ry,end2,end,dx,dy))).concat(["L",cx+rx*Math.cos(end),cy+ry*Math.sin(end)])).concat(curveTo(cx,cy,rx,ry,end,end2,0,0))),out=(out=(out=out.concat(["L",cx+rx*Math.cos(end2)+dx,cy+ry*Math.sin(end2)+dy])).concat(curveTo(cx,cy,rx,ry,end2,start2,dx,dy))).concat(["Z"]);var inn=["M",cx+irx*cs,cy+iry*ss];inn=(inn=(inn=(inn=inn.concat(curveTo(cx,cy,irx,iry,start,end,0,0))).concat(["L",cx+irx*Math.cos(end)+dx,cy+iry*Math.sin(end)+dy])).concat(curveTo(cx,cy,irx,iry,end,start,dx,dy))).concat(["Z"]);var side1=["M",cx+rx*cs,cy+ry*ss,"L",cx+rx*cs+dx,cy+ry*ss+dy,"L",cx+irx*cs+dx,cy+iry*ss+dy,"L",cx+irx*cs,cy+iry*ss,"Z"],side2=["M",cx+rx*ce,cy+ry*se,"L",cx+rx*ce+dx,cy+ry*se+dy,"L",cx+irx*ce+dx,cy+iry*se+dy,"L",cx+irx*ce,cy+iry*se,"Z"],angleCorr=Math.atan2(dy,-dx),angleEnd=Math.abs(end+angleCorr),angleStart=Math.abs(start+angleCorr),angleMid=Math.abs((start+end)/2+angleCorr);angleEnd=toZeroPIRange(angleEnd),angleStart=toZeroPIRange(angleStart);var incPrecision=1e5,a1=(angleMid=toZeroPIRange(angleMid))*incPrecision,a2=angleStart*incPrecision,a3=angleEnd*incPrecision;return{top:top,zTop:Math.PI*incPrecision+1,out:out,zOut:Math.max(a1,a2,a3),inn:inn,zInn:Math.max(a1,a2,a3),side1:side1,zSide1:.99*a3,side2:side2,zSide2:.99*a2}}}(Highcharts),function(H){function getScale(chart,depth){var corners,plotLeft=chart.plotLeft,plotRight=chart.plotWidth+plotLeft,plotTop=chart.plotTop,plotBottom=chart.plotHeight+plotTop,originX=plotLeft+chart.plotWidth/2,originY=plotTop+chart.plotHeight/2,bbox3d={minX:Number.MAX_VALUE,maxX:-Number.MAX_VALUE,minY:Number.MAX_VALUE,maxY:-Number.MAX_VALUE},scale=1;return corners=[{x:plotLeft,y:plotTop,z:0},{x:plotLeft,y:plotTop,z:depth}],each([0,1],function(i){corners.push({x:plotRight,y:corners[i].y,z:corners[i].z})}),each([0,1,2,3],function(i){corners.push({x:corners[i].x,y:plotBottom,z:corners[i].z})}),corners=perspective(corners,chart,!1),each(corners,function(corner){bbox3d.minX=Math.min(bbox3d.minX,corner.x),bbox3d.maxX=Math.max(bbox3d.maxX,corner.x),bbox3d.minY=Math.min(bbox3d.minY,corner.y),bbox3d.maxY=Math.max(bbox3d.maxY,corner.y)}),plotLeft>bbox3d.minX&&(scale=Math.min(scale,1-Math.abs((plotLeft+originX)/(bbox3d.minX+originX))%1)),plotRight<bbox3d.maxX&&(scale=Math.min(scale,(plotRight-originX)/(bbox3d.maxX-originX))),plotTop>bbox3d.minY&&(scale=bbox3d.minY<0?Math.min(scale,(plotTop+originY)/(-bbox3d.minY+plotTop+originY)):Math.min(scale,1-(plotTop+originY)/(bbox3d.minY+originY)%1)),plotBottom<bbox3d.maxY&&(scale=Math.min(scale,Math.abs((plotBottom-originY)/(bbox3d.maxY-originY)))),scale}var Chart=H.Chart,each=H.each,merge=H.merge,perspective=H.perspective,pick=H.pick,wrap=H.wrap;Chart.prototype.is3d=function(){return this.options.chart.options3d&&this.options.chart.options3d.enabled},Chart.prototype.propsRequireDirtyBox.push("chart.options3d"),Chart.prototype.propsRequireUpdateSeries.push("chart.options3d"),wrap(Chart.prototype,"initSeries",function(proceed,options){var type=options.type||this.options.chart.type||this.options.chart.defaultSeriesType;return this.is3d()&&"scatter"===type&&(options.type="scatter3d"),proceed.call(this,options)}),H.wrap(H.Chart.prototype,"isInsidePlot",function(proceed){return this.is3d()||proceed.apply(this,[].slice.call(arguments,1))}),merge(!0,H.getOptions(),{chart:{options3d:{enabled:!1,alpha:0,beta:0,depth:100,fitToPlot:!0,viewDistance:25,axisLabelPosition:"default",frame:{visible:"default",size:1,bottom:{},top:{},left:{},right:{},back:{},front:{}}}}}),wrap(Chart.prototype,"setClassName",function(proceed){proceed.apply(this,[].slice.call(arguments,1)),this.is3d()&&(this.container.className+=" highcharts-3d-chart")}),H.wrap(H.Chart.prototype,"setChartSize",function(proceed){var chart=this,options3d=chart.options.chart.options3d;if(proceed.apply(chart,[].slice.call(arguments,1)),chart.is3d()){var inverted=chart.inverted,clipBox=chart.clipBox,margin=chart.margin,y=inverted?"x":"y",w=inverted?"height":"width",h=inverted?"width":"height";clipBox[inverted?"y":"x"]=-(margin[3]||0),clipBox[y]=-(margin[0]||0),clipBox[w]=chart.chartWidth+(margin[3]||0)+(margin[1]||0),clipBox[h]=chart.chartHeight+(margin[0]||0)+(margin[2]||0),chart.scale3d=1,!0===options3d.fitToPlot&&(chart.scale3d=getScale(chart,options3d.depth))}}),wrap(Chart.prototype,"redraw",function(proceed){this.is3d()&&(this.isDirtyBox=!0,this.frame3d=this.get3dFrame()),proceed.apply(this,[].slice.call(arguments,1))}),wrap(Chart.prototype,"render",function(proceed){this.is3d()&&(this.frame3d=this.get3dFrame()),proceed.apply(this,[].slice.call(arguments,1))}),wrap(Chart.prototype,"renderSeries",function(proceed){var series,i=this.series.length;if(this.is3d())for(;i--;)(series=this.series[i]).translate(),series.render();else proceed.call(this)}),wrap(Chart.prototype,"drawChartBox",function(proceed){if(this.is3d()){var chart=this,renderer=chart.renderer,options3d=this.options.chart.options3d,frame=chart.get3dFrame(),xm=this.plotLeft,xp=this.plotLeft+this.plotWidth,ym=this.plotTop,yp=this.plotTop+this.plotHeight,zm=0,zp=options3d.depth,xmm=xm-(frame.left.visible?frame.left.size:0),xpp=xp+(frame.right.visible?frame.right.size:0),ymm=ym-(frame.top.visible?frame.top.size:0),ypp=yp+(frame.bottom.visible?frame.bottom.size:0),zmm=zm-(frame.front.visible?frame.front.size:0),zpp=zp+(frame.back.visible?frame.back.size:0),verb=chart.hasRendered?"animate":"attr";this.frame3d=frame,this.frameShapes||(this.frameShapes={bottom:renderer.polyhedron().add(),top:renderer.polyhedron().add(),left:renderer.polyhedron().add(),right:renderer.polyhedron().add(),back:renderer.polyhedron().add(),front:renderer.polyhedron().add()}),this.frameShapes.bottom[verb]({"class":"highcharts-3d-frame highcharts-3d-frame-bottom",zIndex:frame.bottom.frontFacing?-1e3:1e3,faces:[{fill:H.color(frame.bottom.color).brighten(.1).get(),vertexes:[{x:xmm,y:ypp,z:zmm},{x:xpp,y:ypp,z:zmm},{x:xpp,y:ypp,z:zpp},{x:xmm,y:ypp,z:zpp}],enabled:frame.bottom.visible},{fill:H.color(frame.bottom.color).brighten(.1).get(),vertexes:[{x:xm,y:yp,z:zp},{x:xp,y:yp,z:zp},{x:xp,y:yp,z:zm},{x:xm,y:yp,z:zm}],enabled:frame.bottom.visible},{fill:H.color(frame.bottom.color).brighten(-.1).get(),vertexes:[{x:xmm,y:ypp,z:zmm},{x:xmm,y:ypp,z:zpp},{x:xm,y:yp,z:zp},{x:xm,y:yp,z:zm}],enabled:frame.bottom.visible&&!frame.left.visible},{fill:H.color(frame.bottom.color).brighten(-.1).get(),vertexes:[{x:xpp,y:ypp,z:zpp},{x:xpp,y:ypp,z:zmm},{x:xp,y:yp,z:zm},{x:xp,y:yp,z:zp}],enabled:frame.bottom.visible&&!frame.right.visible},{fill:H.color(frame.bottom.color).get(),vertexes:[{x:xpp,y:ypp,z:zmm},{x:xmm,y:ypp,z:zmm},{x:xm,y:yp,z:zm},{x:xp,y:yp,z:zm}],enabled:frame.bottom.visible&&!frame.front.visible},{fill:H.color(frame.bottom.color).get(),vertexes:[{x:xmm,y:ypp,z:zpp},{x:xpp,y:ypp,z:zpp},{x:xp,y:yp,z:zp},{x:xm,y:yp,z:zp}],enabled:frame.bottom.visible&&!frame.back.visible}]}),this.frameShapes.top[verb]({"class":"highcharts-3d-frame highcharts-3d-frame-top",zIndex:frame.top.frontFacing?-1e3:1e3,faces:[{fill:H.color(frame.top.color).brighten(.1).get(),vertexes:[{x:xmm,y:ymm,z:zpp},{x:xpp,y:ymm,z:zpp},{x:xpp,y:ymm,z:zmm},{x:xmm,y:ymm,z:zmm}],enabled:frame.top.visible},{fill:H.color(frame.top.color).brighten(.1).get(),vertexes:[{x:xm,y:ym,z:zm},{x:xp,y:ym,z:zm},{x:xp,y:ym,z:zp},{x:xm,y:ym,z:zp}],enabled:frame.top.visible},{fill:H.color(frame.top.color).brighten(-.1).get(),vertexes:[{x:xmm,y:ymm,z:zpp},{x:xmm,y:ymm,z:zmm},{x:xm,y:ym,z:zm},{x:xm,y:ym,z:zp}],enabled:frame.top.visible&&!frame.left.visible},{fill:H.color(frame.top.color).brighten(-.1).get(),vertexes:[{x:xpp,y:ymm,z:zmm},{x:xpp,y:ymm,z:zpp},{x:xp,y:ym,z:zp},{x:xp,y:ym,z:zm}],enabled:frame.top.visible&&!frame.right.visible},{fill:H.color(frame.top.color).get(),vertexes:[{x:xmm,y:ymm,z:zmm},{x:xpp,y:ymm,z:zmm},{x:xp,y:ym,z:zm},{x:xm,y:ym,z:zm}],enabled:frame.top.visible&&!frame.front.visible},{fill:H.color(frame.top.color).get(),vertexes:[{x:xpp,y:ymm,z:zpp},{x:xmm,y:ymm,z:zpp},{x:xm,y:ym,z:zp},{x:xp,y:ym,z:zp}],enabled:frame.top.visible&&!frame.back.visible}]}),this.frameShapes.left[verb]({"class":"highcharts-3d-frame highcharts-3d-frame-left",zIndex:frame.left.frontFacing?-1e3:1e3,faces:[{fill:H.color(frame.left.color).brighten(.1).get(),vertexes:[{x:xmm,y:ypp,z:zmm},{x:xm,y:yp,z:zm},{x:xm,y:yp,z:zp},{x:xmm,y:ypp,z:zpp}],enabled:frame.left.visible&&!frame.bottom.visible},{fill:H.color(frame.left.color).brighten(.1).get(),vertexes:[{x:xmm,y:ymm,z:zpp},{x:xm,y:ym,z:zp},{x:xm,y:ym,z:zm},{x:xmm,y:ymm,z:zmm}],enabled:frame.left.visible&&!frame.top.visible},{fill:H.color(frame.left.color).brighten(-.1).get(),vertexes:[{x:xmm,y:ypp,z:zpp},{x:xmm,y:ymm,z:zpp},{x:xmm,y:ymm,z:zmm},{x:xmm,y:ypp,z:zmm}],enabled:frame.left.visible},{fill:H.color(frame.left.color).brighten(-.1).get(),vertexes:[{x:xm,y:ym,z:zp},{x:xm,y:yp,z:zp},{x:xm,y:yp,z:zm},{x:xm,y:ym,z:zm}],enabled:frame.left.visible},{fill:H.color(frame.left.color).get(),vertexes:[{x:xmm,y:ypp,z:zmm},{x:xmm,y:ymm,z:zmm},{x:xm,y:ym,z:zm},{x:xm,y:yp,z:zm}],enabled:frame.left.visible&&!frame.front.visible},{fill:H.color(frame.left.color).get(),vertexes:[{x:xmm,y:ymm,z:zpp},{x:xmm,y:ypp,z:zpp},{x:xm,y:yp,z:zp},{x:xm,y:ym,z:zp}],enabled:frame.left.visible&&!frame.back.visible}]}),this.frameShapes.right[verb]({"class":"highcharts-3d-frame highcharts-3d-frame-right",zIndex:frame.right.frontFacing?-1e3:1e3,faces:[{fill:H.color(frame.right.color).brighten(.1).get(),vertexes:[{x:xpp,y:ypp,z:zpp},{x:xp,y:yp,z:zp},{x:xp,y:yp,z:zm},{x:xpp,y:ypp,z:zmm}],enabled:frame.right.visible&&!frame.bottom.visible},{fill:H.color(frame.right.color).brighten(.1).get(),vertexes:[{x:xpp,y:ymm,z:zmm},{x:xp,y:ym,z:zm},{x:xp,y:ym,z:zp},{x:xpp,y:ymm,z:zpp}],enabled:frame.right.visible&&!frame.top.visible},{fill:H.color(frame.right.color).brighten(-.1).get(),vertexes:[{x:xp,y:ym,z:zm},{x:xp,y:yp,z:zm},{x:xp,y:yp,z:zp},{x:xp,y:ym,z:zp}],enabled:frame.right.visible},{fill:H.color(frame.right.color).brighten(-.1).get(),vertexes:[{x:xpp,y:ypp,z:zmm},{x:xpp,y:ymm,z:zmm},{x:xpp,y:ymm,z:zpp},{x:xpp,y:ypp,z:zpp}],enabled:frame.right.visible},{fill:H.color(frame.right.color).get(),vertexes:[{x:xpp,y:ymm,z:zmm},{x:xpp,y:ypp,z:zmm},{x:xp,y:yp,z:zm},{x:xp,y:ym,z:zm}],enabled:frame.right.visible&&!frame.front.visible},{fill:H.color(frame.right.color).get(),vertexes:[{x:xpp,y:ypp,z:zpp},{x:xpp,y:ymm,z:zpp},{x:xp,y:ym,z:zp},{x:xp,y:yp,z:zp}],enabled:frame.right.visible&&!frame.back.visible}]}),this.frameShapes.back[verb]({"class":"highcharts-3d-frame highcharts-3d-frame-back",zIndex:frame.back.frontFacing?-1e3:1e3,faces:[{fill:H.color(frame.back.color).brighten(.1).get(),vertexes:[{x:xpp,y:ypp,z:zpp},{x:xmm,y:ypp,z:zpp},{x:xm,y:yp,z:zp},{x:xp,y:yp,z:zp}],enabled:frame.back.visible&&!frame.bottom.visible},{fill:H.color(frame.back.color).brighten(.1).get(),vertexes:[{x:xmm,y:ymm,z:zpp},{x:xpp,y:ymm,z:zpp},{x:xp,y:ym,z:zp},{x:xm,y:ym,z:zp}],enabled:frame.back.visible&&!frame.top.visible},{fill:H.color(frame.back.color).brighten(-.1).get(),vertexes:[{x:xmm,y:ypp,z:zpp},{x:xmm,y:ymm,z:zpp},{x:xm,y:ym,z:zp},{x:xm,y:yp,z:zp}],enabled:frame.back.visible&&!frame.left.visible},{fill:H.color(frame.back.color).brighten(-.1).get(),vertexes:[{x:xpp,y:ymm,z:zpp},{x:xpp,y:ypp,z:zpp},{x:xp,y:yp,z:zp},{x:xp,y:ym,z:zp}],enabled:frame.back.visible&&!frame.right.visible},{fill:H.color(frame.back.color).get(),vertexes:[{x:xm,y:ym,z:zp},{x:xp,y:ym,z:zp},{x:xp,y:yp,z:zp},{x:xm,y:yp,z:zp}],enabled:frame.back.visible},{fill:H.color(frame.back.color).get(),vertexes:[{x:xmm,y:ypp,z:zpp},{x:xpp,y:ypp,z:zpp},{x:xpp,y:ymm,z:zpp},{x:xmm,y:ymm,z:zpp}],enabled:frame.back.visible}]}),this.frameShapes.front[verb]({"class":"highcharts-3d-frame highcharts-3d-frame-front",zIndex:frame.front.frontFacing?-1e3:1e3,faces:[{fill:H.color(frame.front.color).brighten(.1).get(),vertexes:[{x:xmm,y:ypp,z:zmm},{x:xpp,y:ypp,z:zmm},{x:xp,y:yp,z:zm},{x:xm,y:yp,z:zm}],enabled:frame.front.visible&&!frame.bottom.visible},{fill:H.color(frame.front.color).brighten(.1).get(),vertexes:[{x:xpp,y:ymm,z:zmm},{x:xmm,y:ymm,z:zmm},{x:xm,y:ym,z:zm},{x:xp,y:ym,z:zm}],enabled:frame.front.visible&&!frame.top.visible},{fill:H.color(frame.front.color).brighten(-.1).get(),vertexes:[{x:xmm,y:ymm,z:zmm},{x:xmm,y:ypp,z:zmm},{x:xm,y:yp,z:zm},{x:xm,y:ym,z:zm}],enabled:frame.front.visible&&!frame.left.visible},{fill:H.color(frame.front.color).brighten(-.1).get(),vertexes:[{x:xpp,y:ypp,z:zmm},{x:xpp,y:ymm,z:zmm},{x:xp,y:ym,z:zm},{x:xp,y:yp,z:zm}],enabled:frame.front.visible&&!frame.right.visible},{fill:H.color(frame.front.color).get(),vertexes:[{x:xp,y:ym,z:zm},{x:xm,y:ym,z:zm},{x:xm,y:yp,z:zm},{x:xp,y:yp,z:zm}],enabled:frame.front.visible},{fill:H.color(frame.front.color).get(),vertexes:[{x:xpp,y:ypp,z:zmm},{x:xmm,y:ypp,z:zmm},{x:xmm,y:ymm,z:zmm},{x:xpp,y:ymm,z:zmm}],enabled:frame.front.visible}]})}return proceed.apply(this,[].slice.call(arguments,1))}),Chart.prototype.retrieveStacks=function(stacking){var stackNumber,series=this.series,stacks={},i=1;return each(this.series,function(s){stackNumber=pick(s.options.stack,stacking?0:series.length-1-s.index),stacks[stackNumber]?stacks[stackNumber].series.push(s):(stacks[stackNumber]={series:[s],position:i},i++)}),stacks.totalStacks=i+1,stacks},Chart.prototype.get3dFrame=function(){var chart=this,options3d=chart.options.chart.options3d,frameOptions=options3d.frame,xm=chart.plotLeft,xp=chart.plotLeft+chart.plotWidth,ym=chart.plotTop,yp=chart.plotTop+chart.plotHeight,zm=0,zp=options3d.depth,faceOrientation=function(vertexes){var area=H.shapeArea3d(vertexes,chart);return.5<area?1:area<-.5?-1:0},bottomOrientation=faceOrientation([{x:xm,y:yp,z:zp},{x:xp,y:yp,z:zp},{x:xp,y:yp,z:zm},{x:xm,y:yp,z:zm}]),topOrientation=faceOrientation([{x:xm,y:ym,z:zm},{x:xp,y:ym,z:zm},{x:xp,y:ym,z:zp},{x:xm,y:ym,z:zp}]),leftOrientation=faceOrientation([{x:xm,y:ym,z:zm},{x:xm,y:ym,z:zp},{x:xm,y:yp,z:zp},{x:xm,y:yp,z:zm}]),rightOrientation=faceOrientation([{x:xp,y:ym,z:zp},{x:xp,y:ym,z:zm},{x:xp,y:yp,z:zm},{x:xp,y:yp,z:zp}]),frontOrientation=faceOrientation([{x:xm,y:yp,z:zm},{x:xp,y:yp,z:zm},{x:xp,y:ym,z:zm},{x:xm,y:ym,z:zm}]),backOrientation=faceOrientation([{x:xm,y:ym,z:zp},{x:xp,y:ym,z:zp},{x:xp,y:yp,z:zp},{x:xm,y:yp,z:zp}]),defaultShowBottom=!1,defaultShowTop=!1,defaultShowLeft=!1,defaultShowRight=!1,defaultShowFront=!1,defaultShowBack=!0;each([].concat(chart.xAxis,chart.yAxis,chart.zAxis),function(axis){axis&&(axis.horiz?axis.opposite?defaultShowTop=!0:defaultShowBottom=!0:axis.opposite?defaultShowRight=!0:defaultShowLeft=!0)});var getFaceOptions=function(sources,faceOrientation,defaultVisible){for(var faceAttrs=["size","color","visible"],options={},i=0;i<faceAttrs.length;i++)for(var attr=faceAttrs[i],j=0;j<sources.length;j++)if("object"==typeof sources[j]){var val=sources[j][attr];if(val!==undefined&&null!==val){options[attr]=val;break}}var isVisible=defaultVisible;return!0===options.visible||!1===options.visible?isVisible=options.visible:"auto"===options.visible&&(isVisible=0<faceOrientation),{size:pick(options.size,1),color:pick(options.color,"none"),frontFacing:0<faceOrientation,visible:isVisible}},ret={bottom:getFaceOptions([frameOptions.bottom,frameOptions.top,frameOptions],bottomOrientation,defaultShowBottom),top:getFaceOptions([frameOptions.top,frameOptions.bottom,frameOptions],topOrientation,defaultShowTop),left:getFaceOptions([frameOptions.left,frameOptions.right,frameOptions.side,frameOptions],leftOrientation,defaultShowLeft),right:getFaceOptions([frameOptions.right,frameOptions.left,frameOptions.side,frameOptions],rightOrientation,defaultShowRight),back:getFaceOptions([frameOptions.back,frameOptions.front,frameOptions],backOrientation,defaultShowBack),front:getFaceOptions([frameOptions.front,frameOptions.back,frameOptions],frontOrientation,defaultShowFront)};if("auto"===options3d.axisLabelPosition){var isValidEdge=function(face1,face2){return face1.visible!==face2.visible||face1.visible&&face2.visible&&face1.frontFacing!==face2.frontFacing},yEdges=[];isValidEdge(ret.left,ret.front)&&yEdges.push({y:(ym+yp)/2,x:xm,z:zm,xDir:{x:1,y:0,z:0}}),isValidEdge(ret.left,ret.back)&&yEdges.push({y:(ym+yp)/2,x:xm,z:zp,xDir:{x:0,y:0,z:-1}}),isValidEdge(ret.right,ret.front)&&yEdges.push({y:(ym+yp)/2,x:xp,z:zm,xDir:{x:0,y:0,z:1}}),isValidEdge(ret.right,ret.back)&&yEdges.push({y:(ym+yp)/2,x:xp,z:zp,xDir:{x:-1,y:0,z:0}});var xBottomEdges=[];isValidEdge(ret.bottom,ret.front)&&xBottomEdges.push({x:(xm+xp)/2,y:yp,z:zm,xDir:{x:1,y:0,z:0}}),isValidEdge(ret.bottom,ret.back)&&xBottomEdges.push({x:(xm+xp)/2,y:yp,z:zp,xDir:{x:-1,y:0,z:0}});var xTopEdges=[];isValidEdge(ret.top,ret.front)&&xTopEdges.push({x:(xm+xp)/2,y:ym,z:zm,xDir:{x:1,y:0,z:0}}),isValidEdge(ret.top,ret.back)&&xTopEdges.push({x:(xm+xp)/2,y:ym,z:zp,xDir:{x:-1,y:0,z:0}});var zBottomEdges=[];isValidEdge(ret.bottom,ret.left)&&zBottomEdges.push({z:(zm+zp)/2,y:yp,x:xm,xDir:{x:0,y:0,z:-1}}),isValidEdge(ret.bottom,ret.right)&&zBottomEdges.push({z:(zm+zp)/2,y:yp,x:xp,xDir:{x:0,y:0,z:1}});var zTopEdges=[];isValidEdge(ret.top,ret.left)&&zTopEdges.push({z:(zm+zp)/2,y:ym,x:xm,xDir:{x:0,y:0,z:-1}}),isValidEdge(ret.top,ret.right)&&zTopEdges.push({z:(zm+zp)/2,y:ym,x:xp,xDir:{x:0,y:0,z:1}});var pickEdge=function(edges,axis,mult){if(0===edges.length)return null;if(1===edges.length)return edges[0];for(var best=0,projections=perspective(edges,chart,!1),i=1;i<projections.length;i++)mult*projections[i][axis]>mult*projections[best][axis]?best=i:mult*projections[i][axis]==mult*projections[best][axis]&&projections[i].z<projections[best].z&&(best=i);return edges[best]};ret.axes={y:{left:pickEdge(yEdges,"x",-1),right:pickEdge(yEdges,"x",1)},x:{top:pickEdge(xTopEdges,"y",-1),bottom:pickEdge(xBottomEdges,"y",1)},z:{top:pickEdge(zTopEdges,"y",-1),bottom:pickEdge(zBottomEdges,"y",1)}}}else ret.axes={y:{left:{x:xm,z:zm,xDir:{x:1,y:0,z:0}},right:{x:xp,z:zm,xDir:{x:0,y:0,z:1}}},x:{top:{y:ym,z:zm,xDir:{x:1,y:0,z:0}},bottom:{y:yp,z:zm,xDir:{x:1,y:0,z:0}}},z:{top:{x:defaultShowLeft?xp:xm,y:ym,xDir:defaultShowLeft?{x:0,y:0,z:1}:{x:0,y:0,z:-1}},bottom:{x:defaultShowLeft?xp:xm,y:yp,xDir:defaultShowLeft?{x:0,y:0,z:1}:{x:0,y:0,z:-1}}}};return ret},H.Fx.prototype.matrixSetter=function(){var interpolated;if(this.pos<1&&(H.isArray(this.start)||H.isArray(this.end))){var start=this.start||[1,0,0,1,0,0],end=this.end||[1,0,0,1,0,0];interpolated=[];for(
var i=0;i<6;i++)interpolated.push(this.pos*end[i]+(1-this.pos)*start[i])}else interpolated=this.end;this.elem.attr(this.prop,interpolated,null,!0)}}(Highcharts),function(H){function fix3dPosition(axis,pos,isTitle){if(!axis.chart.is3d()||"colorAxis"===axis.coll)return pos;var vecX,chart=axis.chart,alpha=deg2rad*chart.options.chart.options3d.alpha,beta=deg2rad*chart.options.chart.options3d.beta,positionMode=pick(isTitle&&axis.options.title.position3d,axis.options.labels.position3d),skew=pick(isTitle&&axis.options.title.skew3d,axis.options.labels.skew3d),frame=chart.frame3d,plotLeft=chart.plotLeft,plotRight=chart.plotWidth+plotLeft,plotTop=chart.plotTop,plotBottom=chart.plotHeight+plotTop,reverseFlap=!1,offsetX=0,offsetY=0,vecY={x:0,y:1,z:0};if(pos=axis.swapZ({x:pos.x,y:pos.y,z:0}),axis.isZAxis)if(axis.opposite){if(null===frame.axes.z.top)return{};offsetY=pos.y-plotTop,pos.x=frame.axes.z.top.x,pos.y=frame.axes.z.top.y,vecX=frame.axes.z.top.xDir,reverseFlap=!frame.top.frontFacing}else{if(null===frame.axes.z.bottom)return{};offsetY=pos.y-plotBottom,pos.x=frame.axes.z.bottom.x,pos.y=frame.axes.z.bottom.y,vecX=frame.axes.z.bottom.xDir,reverseFlap=!frame.bottom.frontFacing}else if(axis.horiz)if(axis.opposite){if(null===frame.axes.x.top)return{};offsetY=pos.y-plotTop,pos.y=frame.axes.x.top.y,pos.z=frame.axes.x.top.z,vecX=frame.axes.x.top.xDir,reverseFlap=!frame.top.frontFacing}else{if(null===frame.axes.x.bottom)return{};offsetY=pos.y-plotBottom,pos.y=frame.axes.x.bottom.y,pos.z=frame.axes.x.bottom.z,vecX=frame.axes.x.bottom.xDir,reverseFlap=!frame.bottom.frontFacing}else if(axis.opposite){if(null===frame.axes.y.right)return{};offsetX=pos.x-plotRight,pos.x=frame.axes.y.right.x,pos.z=frame.axes.y.right.z,vecX={x:(vecX=frame.axes.y.right.xDir).z,y:vecX.y,z:-vecX.x}}else{if(null===frame.axes.y.left)return{};offsetX=pos.x-plotLeft,pos.x=frame.axes.y.left.x,pos.z=frame.axes.y.left.z,vecX=frame.axes.y.left.xDir}if("chart"===positionMode);else if("flap"===positionMode)if(axis.horiz){var sin=Math.sin(alpha),cos=Math.cos(alpha);axis.opposite&&(sin=-sin),reverseFlap&&(sin=-sin),vecY={x:vecX.z*sin,y:cos,z:-vecX.x*sin}}else vecX={x:Math.cos(beta),y:0,z:Math.sin(beta)};else if("ortho"===positionMode)if(axis.horiz){var sina=Math.sin(alpha),cosa=Math.cos(alpha),vecZ={x:Math.sin(beta)*cosa,y:-sina,z:-cosa*Math.cos(beta)};vecY={x:vecX.y*vecZ.z-vecX.z*vecZ.y,y:vecX.z*vecZ.x-vecX.x*vecZ.z,z:vecX.x*vecZ.y-vecX.y*vecZ.x};var scale=1/Math.sqrt(vecY.x*vecY.x+vecY.y*vecY.y+vecY.z*vecY.z);reverseFlap&&(scale=-scale),vecY={x:scale*vecY.x,y:scale*vecY.y,z:scale*vecY.z}}else vecX={x:Math.cos(beta),y:0,z:Math.sin(beta)};else axis.horiz?vecY={x:Math.sin(beta)*Math.sin(alpha),y:Math.cos(alpha),z:-Math.cos(beta)*Math.sin(alpha)}:vecX={x:Math.cos(beta),y:0,z:Math.sin(beta)};pos.x+=offsetX*vecX.x+offsetY*vecY.x,pos.y+=offsetX*vecX.y+offsetY*vecY.y,pos.z+=offsetX*vecX.z+offsetY*vecY.z;var projected=perspective([pos],axis.chart)[0];if(skew){shapeArea(perspective([pos,{x:pos.x+vecX.x,y:pos.y+vecX.y,z:pos.z+vecX.z},{x:pos.x+vecY.x,y:pos.y+vecY.y,z:pos.z+vecY.z}],axis.chart))<0&&(vecX={x:-vecX.x,y:-vecX.y,z:-vecX.z});var pointsProjected=perspective([{x:pos.x,y:pos.y,z:pos.z},{x:pos.x+vecX.x,y:pos.y+vecX.y,z:pos.z+vecX.z},{x:pos.x+vecY.x,y:pos.y+vecY.y,z:pos.z+vecY.z}],axis.chart);projected.matrix=[pointsProjected[1].x-pointsProjected[0].x,pointsProjected[1].y-pointsProjected[0].y,pointsProjected[2].x-pointsProjected[0].x,pointsProjected[2].y-pointsProjected[0].y,projected.x,projected.y],projected.matrix[4]-=projected.x*projected.matrix[0]+projected.y*projected.matrix[2],projected.matrix[5]-=projected.x*projected.matrix[1]+projected.y*projected.matrix[3]}else projected.matrix=null;return projected}var ZAxis,Axis=H.Axis,Chart=H.Chart,deg2rad=H.deg2rad,each=H.each,extend=H.extend,merge=H.merge,perspective=H.perspective,pick=H.pick,shapeArea=H.shapeArea,splat=H.splat,Tick=H.Tick,wrap=H.wrap,extendedOptions={labels:{position3d:"offset",skew3d:!1},title:{position3d:null,skew3d:null}};merge(!0,Axis.prototype.defaultOptions,extendedOptions),wrap(Axis.prototype,"setOptions",function(proceed,userOptions){var options;proceed.call(this,userOptions),this.chart.is3d&&this.chart.is3d()&&"colorAxis"!==this.coll&&((options=this.options).tickWidth=pick(options.tickWidth,0),options.gridLineWidth=pick(options.gridLineWidth,1))}),wrap(Axis.prototype,"getPlotLinePath",function(proceed){var path=proceed.apply(this,[].slice.call(arguments,1));if(!this.chart.is3d()||"colorAxis"===this.coll)return path;if(null===path)return path;var chart=this.chart,options3d=chart.options.chart.options3d,d=this.isZAxis?chart.plotWidth:options3d.depth,frame=chart.frame3d,pArr=[this.swapZ({x:path[1],y:path[2],z:0}),this.swapZ({x:path[1],y:path[2],z:d}),this.swapZ({x:path[4],y:path[5],z:0}),this.swapZ({x:path[4],y:path[5],z:d})],pathSegments=[];return this.horiz?(this.isZAxis?(frame.left.visible&&pathSegments.push(pArr[0],pArr[2]),frame.right.visible&&pathSegments.push(pArr[1],pArr[3])):(frame.front.visible&&pathSegments.push(pArr[0],pArr[2]),frame.back.visible&&pathSegments.push(pArr[1],pArr[3])),frame.top.visible&&pathSegments.push(pArr[0],pArr[1]),frame.bottom.visible&&pathSegments.push(pArr[2],pArr[3])):(frame.front.visible&&pathSegments.push(pArr[0],pArr[2]),frame.back.visible&&pathSegments.push(pArr[1],pArr[3]),frame.left.visible&&pathSegments.push(pArr[0],pArr[1]),frame.right.visible&&pathSegments.push(pArr[2],pArr[3])),pathSegments=perspective(pathSegments,this.chart,!1),this.chart.renderer.toLineSegments(pathSegments)}),wrap(Axis.prototype,"getLinePath",function(proceed){return this.chart.is3d()&&"colorAxis"!==this.coll?[]:proceed.apply(this,[].slice.call(arguments,1))}),wrap(Axis.prototype,"getPlotBandPath",function(proceed){if(!this.chart.is3d()||"colorAxis"===this.coll)return proceed.apply(this,[].slice.call(arguments,1));var args=arguments,from=args[1],to=args[2],path=[],fromPath=this.getPlotLinePath(from),toPath=this.getPlotLinePath(to);if(fromPath&&toPath)for(var i=0;i<fromPath.length;i+=6)path.push("M",fromPath[i+1],fromPath[i+2],"L",fromPath[i+4],fromPath[i+5],"L",toPath[i+4],toPath[i+5],"L",toPath[i+1],toPath[i+2],"Z");return path}),wrap(Tick.prototype,"getMarkPath",function(proceed){var path=proceed.apply(this,[].slice.call(arguments,1)),pArr=[fix3dPosition(this.axis,{x:path[1],y:path[2],z:0}),fix3dPosition(this.axis,{x:path[4],y:path[5],z:0})];return this.axis.chart.renderer.toLineSegments(pArr)}),wrap(Tick.prototype,"getLabelPosition",function(proceed){var pos=proceed.apply(this,[].slice.call(arguments,1));return fix3dPosition(this.axis,pos)}),wrap(Axis.prototype,"getTitlePosition",function(proceed){return fix3dPosition(this,proceed.apply(this,[].slice.call(arguments,1)),!0)}),wrap(Axis.prototype,"drawCrosshair",function(proceed){var args=arguments;this.chart.is3d()&&"colorAxis"!==this.coll&&args[2]&&(args[2]={plotX:args[2].plotXold||args[2].plotX,plotY:args[2].plotYold||args[2].plotY}),proceed.apply(this,[].slice.call(args,1))}),wrap(Axis.prototype,"destroy",function(proceed){each(["backFrame","bottomFrame","sideFrame"],function(prop){this[prop]&&(this[prop]=this[prop].destroy())},this),proceed.apply(this,[].slice.call(arguments,1))}),Axis.prototype.swapZ=function(p,insidePlotArea){if(this.isZAxis){var plotLeft=insidePlotArea?0:this.chart.plotLeft;return{x:plotLeft+p.z,y:p.y,z:p.x-plotLeft}}return p},extend((ZAxis=H.ZAxis=function(){this.init.apply(this,arguments)}).prototype,Axis.prototype),extend(ZAxis.prototype,{isZAxis:!0,setOptions:function(userOptions){userOptions=merge({offset:0,lineWidth:0},userOptions),Axis.prototype.setOptions.call(this,userOptions),this.coll="zAxis"},setAxisSize:function(){Axis.prototype.setAxisSize.call(this),this.width=this.len=this.chart.options.chart.options3d.depth,this.right=this.chart.chartWidth-this.width-this.left},getSeriesExtremes:function(){var axis=this,chart=axis.chart;axis.hasVisibleSeries=!1,axis.dataMin=axis.dataMax=axis.ignoreMinPadding=axis.ignoreMaxPadding=null,axis.buildStacks&&axis.buildStacks(),each(axis.series,function(series){if(series.visible||!chart.options.chart.ignoreHiddenSeries){var zData,threshold=series.options.threshold;axis.hasVisibleSeries=!0,axis.positiveValuesOnly&&threshold<=0&&(threshold=null),(zData=series.zData).length&&(axis.dataMin=Math.min(pick(axis.dataMin,zData[0]),Math.min.apply(null,zData)),axis.dataMax=Math.max(pick(axis.dataMax,zData[0]),Math.max.apply(null,zData)))}})}}),wrap(Chart.prototype,"getAxes",function(proceed){var chart=this,options=this.options,zAxisOptions=options.zAxis=splat(options.zAxis||{});proceed.call(this),chart.is3d()&&(this.zAxis=[],each(zAxisOptions,function(axisOptions,i){axisOptions.index=i,axisOptions.isX=!0,new ZAxis(chart,axisOptions).setScale()}))})}(Highcharts),perspective=(H=Highcharts).perspective,pick=H.pick,(0,H.wrap)(H.Series.prototype,"translate",function(proceed){proceed.apply(this,[].slice.call(arguments,1)),this.chart.is3d()&&this.translate3dPoints()}),H.Series.prototype.translate3dPoints=function(){var rawPoint,projectedPoints,projectedPoint,zValue,i,series=this,chart=series.chart,zAxis=pick(series.zAxis,chart.options.zAxis[0]),rawPoints=[];for(i=0;i<series.data.length;i++)rawPoint=series.data[i],zAxis&&zAxis.translate&&(zValue=zAxis.isLog&&zAxis.val2lin?zAxis.val2lin(rawPoint.z):rawPoint.z,rawPoint.plotZ=zAxis.translate(zValue),rawPoint.isInside=!!rawPoint.isInside&&zValue>=zAxis.min&&zValue<=zAxis.max),rawPoints.push({x:pick(rawPoint.plotXold,rawPoint.plotX),y:pick(rawPoint.plotYold,rawPoint.plotY),z:pick(rawPoint.plotZold,rawPoint.plotZ)});for(projectedPoints=perspective(rawPoints,chart,!0),i=0;i<series.data.length;i++)rawPoint=series.data[i],projectedPoint=projectedPoints[i],rawPoint.plotXold=rawPoint.plotX,rawPoint.plotYold=rawPoint.plotY,rawPoint.plotZold=rawPoint.plotZ,rawPoint.plotX=projectedPoint.x,rawPoint.plotY=projectedPoint.y,rawPoint.plotZ=projectedPoint.z},function(H){function pointAttribs(proceed){var attr=proceed.apply(this,[].slice.call(arguments,1));return this.chart.is3d&&this.chart.is3d()&&(attr.stroke=this.options.edgeColor||attr.fill,attr["stroke-width"]=pick(this.options.edgeWidth,1)),attr}var each=H.each,perspective=H.perspective,pick=H.pick,Series=H.Series,seriesTypes=H.seriesTypes,inArray=H.inArray,svg=H.svg,wrap=H.wrap;wrap(seriesTypes.column.prototype,"translate",function(proceed){proceed.apply(this,[].slice.call(arguments,1)),this.chart.is3d()&&this.translate3dShapes()}),seriesTypes.column.prototype.translate3dPoints=function(){},seriesTypes.column.prototype.translate3dShapes=function(){var series=this,chart=series.chart,seriesOptions=series.options,depth=seriesOptions.depth||25,z=(seriesOptions.stacking?seriesOptions.stack||0:series.index)*(depth+(seriesOptions.groupZPadding||1)),borderCrisp=series.borderWidth%2?.5:0;chart.inverted&&!series.yAxis.reversed&&(borderCrisp*=-1),!1!==seriesOptions.grouping&&(z=0),z+=seriesOptions.groupZPadding||1,each(series.data,function(point){if(null!==point.y){var borderlessBase,shapeArgs=point.shapeArgs,tooltipPos=point.tooltipPos;each([["x","width"],["y","height"]],function(d){if((borderlessBase=shapeArgs[d[0]]-borderCrisp)<0&&(shapeArgs[d[1]]+=shapeArgs[d[0]]+borderCrisp,shapeArgs[d[0]]=-borderCrisp,borderlessBase=0),borderlessBase+shapeArgs[d[1]]>series[d[0]+"Axis"].len&&0!==shapeArgs[d[1]]&&(shapeArgs[d[1]]=series[d[0]+"Axis"].len-shapeArgs[d[0]]),0!==shapeArgs[d[1]]&&(shapeArgs[d[0]]>=series[d[0]+"Axis"].len||shapeArgs[d[0]]+shapeArgs[d[1]]<=borderCrisp))for(var key in shapeArgs)shapeArgs[key]=0}),point.shapeType="cuboid",shapeArgs.z=z,shapeArgs.depth=depth,shapeArgs.insidePlotArea=!0,tooltipPos=perspective([{x:tooltipPos[0],y:tooltipPos[1],z:z}],chart,!0)[0],point.tooltipPos=[tooltipPos.x,tooltipPos.y]}}),series.z=z},wrap(seriesTypes.column.prototype,"animate",function(proceed){if(this.chart.is3d()){var init=arguments[1],yAxis=this.yAxis,series=this,reversed=this.yAxis.reversed;svg&&(init?each(series.data,function(point){null!==point.y&&(point.height=point.shapeArgs.height,point.shapey=point.shapeArgs.y,point.shapeArgs.height=1,reversed||(point.stackY?point.shapeArgs.y=point.plotY+yAxis.translate(point.stackY):point.shapeArgs.y=point.plotY+(point.negative?-point.height:point.height)))}):(each(series.data,function(point){null!==point.y&&(point.shapeArgs.height=point.height,point.shapeArgs.y=point.shapey,point.graphic&&point.graphic.animate(point.shapeArgs,series.options.animation))}),this.drawDataLabels(),series.animate=null))}else proceed.apply(this,[].slice.call(arguments,1))}),wrap(seriesTypes.column.prototype,"plotGroup",function(proceed,prop,name,visibility,zIndex,parent){return this.chart.is3d()&&parent&&!this[prop]&&(this.chart.columnGroup||(this.chart.columnGroup=this.chart.renderer.g("columnGroup").add(parent)),this[prop]=this.chart.columnGroup,this.chart.columnGroup.attr(this.getPlotBox()),this[prop].survive=!0),proceed.apply(this,Array.prototype.slice.call(arguments,1))}),wrap(seriesTypes.column.prototype,"setVisible",function(proceed,vis){var pointVis,series=this;series.chart.is3d()&&each(series.data,function(point){point.visible=point.options.visible=vis=vis===undefined?!point.visible:vis,pointVis=vis?"visible":"hidden",series.options.data[inArray(point,series.data)]=point.options,point.graphic&&point.graphic.attr({visibility:pointVis})}),proceed.apply(this,Array.prototype.slice.call(arguments,1))}),wrap(seriesTypes.column.prototype,"init",function(proceed){if(proceed.apply(this,[].slice.call(arguments,1)),this.chart.is3d()){var seriesOptions=this.options,grouping=seriesOptions.grouping,stacking=seriesOptions.stacking,reversedStacks=pick(this.yAxis.options.reversedStacks,!0),z=0;if(grouping===undefined||grouping){var i,stacks=this.chart.retrieveStacks(stacking),stack=seriesOptions.stack||0;for(i=0;i<stacks[stack].series.length&&stacks[stack].series[i]!==this;i++);z=10*(stacks.totalStacks-stacks[stack].position)+(reversedStacks?i:-i),this.xAxis.reversed||(z=10*stacks.totalStacks-z)}seriesOptions.zIndex=z}}),wrap(seriesTypes.column.prototype,"pointAttribs",pointAttribs),seriesTypes.columnrange&&(wrap(seriesTypes.columnrange.prototype,"pointAttribs",pointAttribs),seriesTypes.columnrange.prototype.plotGroup=seriesTypes.column.prototype.plotGroup,seriesTypes.columnrange.prototype.setVisible=seriesTypes.column.prototype.setVisible),wrap(Series.prototype,"alignDataLabel",function(proceed){if(this.chart.is3d()&&("column"===this.type||"columnrange"===this.type)){var series=this,chart=series.chart,alignTo=arguments[4],pos={x:alignTo.x,y:alignTo.y,z:series.z};pos=perspective([pos],chart,!0)[0],alignTo.x=pos.x,alignTo.y=pos.y}proceed.apply(this,[].slice.call(arguments,1))}),wrap(H.StackItem.prototype,"getStackBox",function(proceed,chart){var stackBox=proceed.apply(this,[].slice.call(arguments,1));if(chart.is3d()){var pos={x:stackBox.x,y:stackBox.y,z:0};pos=H.perspective([pos],chart,!0)[0],stackBox.x=pos.x,stackBox.y=pos.y}return stackBox})}(Highcharts),function(H){var deg2rad=H.deg2rad,each=H.each,pick=H.pick,seriesTypes=H.seriesTypes,svg=H.svg,wrap=H.wrap;wrap(seriesTypes.pie.prototype,"translate",function(proceed){if(proceed.apply(this,[].slice.call(arguments,1)),this.chart.is3d()){var series=this,seriesOptions=series.options,depth=seriesOptions.depth||0,options3d=series.chart.options.chart.options3d,alpha=options3d.alpha,beta=options3d.beta,z=seriesOptions.stacking?(seriesOptions.stack||0)*depth:series._i*depth;z+=depth/2,!1!==seriesOptions.grouping&&(z=0),each(series.data,function(point){var angle,shapeArgs=point.shapeArgs;point.shapeType="arc3d",shapeArgs.z=z,shapeArgs.depth=.75*depth,shapeArgs.alpha=alpha,shapeArgs.beta=beta,shapeArgs.center=series.center,angle=(shapeArgs.end+shapeArgs.start)/2,point.slicedTranslation={translateX:Math.round(Math.cos(angle)*seriesOptions.slicedOffset*Math.cos(alpha*deg2rad)),translateY:Math.round(Math.sin(angle)*seriesOptions.slicedOffset*Math.cos(alpha*deg2rad))}})}}),wrap(seriesTypes.pie.prototype.pointClass.prototype,"haloPath",function(proceed){var args=arguments;return this.series.chart.is3d()?[]:proceed.call(this,args[1])}),wrap(seriesTypes.pie.prototype,"pointAttribs",function(proceed,point,state){var attr=proceed.call(this,point,state),options=this.options;return this.chart.is3d()&&(attr.stroke=options.edgeColor||point.color||this.color,attr["stroke-width"]=pick(options.edgeWidth,1)),attr}),wrap(seriesTypes.pie.prototype,"drawPoints",function(proceed){proceed.apply(this,[].slice.call(arguments,1)),this.chart.is3d()&&each(this.points,function(point){var graphic=point.graphic;graphic&&graphic[point.y&&point.visible?"show":"hide"]()})}),wrap(seriesTypes.pie.prototype,"drawDataLabels",function(proceed){if(this.chart.is3d()){var series=this,options3d=series.chart.options.chart.options3d;each(series.data,function(point){var shapeArgs=point.shapeArgs,r=shapeArgs.r,a1=(shapeArgs.alpha||options3d.alpha)*deg2rad,b1=(shapeArgs.beta||options3d.beta)*deg2rad,a2=(shapeArgs.start+shapeArgs.end)/2,labelPos=point.labelPos,labelIndexes=[0,2,4],yOffset=-r*(1-Math.cos(a1))*Math.sin(a2),xOffset=r*(Math.cos(b1)-1)*Math.cos(a2);each(labelIndexes,function(index){labelPos[index]+=xOffset,labelPos[index+1]+=yOffset})})}proceed.apply(this,[].slice.call(arguments,1))}),wrap(seriesTypes.pie.prototype,"addPoint",function(proceed){proceed.apply(this,[].slice.call(arguments,1)),this.chart.is3d()&&this.update(this.userOptions,!0)}),wrap(seriesTypes.pie.prototype,"animate",function(proceed){if(this.chart.is3d()){var attribs,init=arguments[1],animation=this.options.animation,center=this.center,group=this.group,markerGroup=this.markerGroup;svg&&(!0===animation&&(animation={}),init?(group.oldtranslateX=group.translateX,group.oldtranslateY=group.translateY,attribs={translateX:center[0],translateY:center[1],scaleX:.001,scaleY:.001},group.attr(attribs),markerGroup&&(markerGroup.attrSetters=group.attrSetters,markerGroup.attr(attribs))):(attribs={translateX:group.oldtranslateX,translateY:group.oldtranslateY,scaleX:1,scaleY:1},group.animate(attribs,animation),markerGroup&&markerGroup.animate(attribs,animation),this.animate=null))}else proceed.apply(this,[].slice.call(arguments,1))})}(Highcharts),function(H){var Point=H.Point,seriesType=H.seriesType,seriesTypes=H.seriesTypes;seriesType("scatter3d","scatter",{tooltip:{pointFormat:"x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>"}},{pointAttribs:function(point){var attribs=seriesTypes.scatter.prototype.pointAttribs.apply(this,arguments);return this.chart.is3d()&&point&&(attribs.zIndex=H.pointCameraDistance(point,this.chart)),attribs},axisTypes:["xAxis","yAxis","zAxis"],pointArrayMap:["x","y","z"],parallelArrays:["x","y","z"],directTouch:!0},{applyOptions:function(){return Point.prototype.applyOptions.apply(this,arguments),this.z===undefined&&(this.z=0),this}})}(Highcharts),function(H){var Axis=H.Axis,SVGRenderer=H.SVGRenderer,VMLRenderer=H.VMLRenderer;VMLRenderer&&(H.setOptions({animate:!1}),VMLRenderer.prototype.face3d=SVGRenderer.prototype.face3d,VMLRenderer.prototype.polyhedron=SVGRenderer.prototype.polyhedron,VMLRenderer.prototype.cuboid=SVGRenderer.prototype.cuboid,VMLRenderer.prototype.cuboidPath=SVGRenderer.prototype.cuboidPath,VMLRenderer.prototype.toLinePath=SVGRenderer.prototype.toLinePath,VMLRenderer.prototype.toLineSegments=SVGRenderer.prototype.toLineSegments,VMLRenderer.prototype.createElement3D=SVGRenderer.prototype.createElement3D,VMLRenderer.prototype.arc3d=function(shapeArgs){var result=SVGRenderer.prototype.arc3d.call(this,shapeArgs);return result.css({zIndex:result.zIndex}),result},H.VMLRenderer.prototype.arc3dPath=H.SVGRenderer.prototype.arc3dPath,H.wrap(Axis.prototype,"render",function(proceed){proceed.apply(this,[].slice.call(arguments,1)),this.sideFrame&&(this.sideFrame.css({zIndex:0}),this.sideFrame.front.attr({fill:this.sideFrame.color})),this.bottomFrame&&(this.bottomFrame.css({zIndex:1}),this.bottomFrame.front.attr({fill:this.bottomFrame.color})),this.backFrame&&(this.backFrame.css({zIndex:0}),this.backFrame.front.attr({fill:this.backFrame.color}))}))}(Highcharts)});