"use strict";!function(factory){"object"==typeof module&&module.exports?module.exports=factory:factory(Highcharts)}(function(Highcharts){var H,defined,each,extend,seriesType,Point;defined=(H=Highcharts).defined,each=H.each,extend=H.extend,seriesType=H.seriesType,H.pick,Point=H.Point,seriesType("sankey","column",{colorByPoint:!0,curveFactor:.33,dataLabels:{enabled:!0,backgroundColor:"none",crop:!1,nodeFormat:undefined,nodeFormatter:function(){return this.point.name},format:undefined,formatter:function(){return""},inside:!0},linkOpacity:.5,nodeWidth:20,nodePadding:10,showInLegend:!1,states:{hover:{linkOpacity:1}},tooltip:{followPointer:!0,headerFormat:'<span style="font-size: 0.85em">{series.name}</span><br/>',pointFormat:"{point.fromNode.name} \u2192 {point.toNode.name}: <b>{point.weight}</b><br/>",nodeFormat:"{point.name}: <b>{point.sum}</b><br/>"}},{isCartesian:!1,forceDL:!0,createNode:function(id){function findById(nodes,id){return H.find(nodes,function(node){return node.id===id})}var options,node=findById(this.nodes,id);return node||(options=this.options.nodes&&findById(this.options.nodes,id),(node=(new Point).init(this,extend({className:"highcharts-node",isNode:!0,id:id,y:1},options))).linksTo=[],node.linksFrom=[],node.formatPrefix="node",node.name=node.name||node.id,node.getSum=function(){var sumTo=0,sumFrom=0;return each(node.linksTo,function(link){sumTo+=link.weight}),each(node.linksFrom,function(link){sumFrom+=link.weight}),Math.max(sumTo,sumFrom)},node.offset=function(point,coll){for(var offset=0,i=0;i<node[coll].length;i++){if(node[coll][i]===point)return offset;offset+=node[coll][i].weight}},node.hasShape=function(){var outgoing=0;return each(node.linksTo,function(link){link.outgoing&&outgoing++}),!node.linksTo.length||outgoing!==node.linksTo.length},this.nodes.push(node)),node},createNodeColumn:function(){var chart=this.chart,column=[],nodePadding=this.options.nodePadding;return column.sum=function(){var sum=0;return each(this,function(node){sum+=node.getSum()}),sum},column.offset=function(node,factor){for(var offset=0,i=0;i<column.length;i++){if(column[i]===node)return offset;offset+=column[i].getSum()*factor+nodePadding}},column.top=function(factor){for(var height=0,i=0;i<column.length;i++)0<i&&(height+=nodePadding),height+=column[i].getSum()*factor;return(chart.plotSizeY-height)/2},column},createNodeColumns:function(){var columns=[];return each(this.nodes,function(node){var i,point,fromColumn=0;if(0===node.linksTo.length)node.column=0;else{for(i=0;i<node.linksTo.length;i++)(point=node.linksTo[0]).fromNode.column>fromColumn&&(fromColumn=point.fromNode.column);node.column=fromColumn+1}columns[node.column]||(columns[node.column]=this.createNodeColumn()),columns[node.column].push(node)},this),columns},pointAttribs:function(point,state){var opacity=this.options.linkOpacity;return state&&(opacity=this.options.states[state].linkOpacity||opacity),{fill:point.isNode?point.color:H.color(point.color).setOpacity(opacity).get()}},generatePoints:function(){var nodeLookup={};H.Series.prototype.generatePoints.call(this),this.nodes||(this.nodes=[]),this.colorCounter=0,each(this.nodes,function(node){node.linksFrom.length=0,node.linksTo.length=0}),each(this.points,function(point){defined(point.from)&&(nodeLookup[point.from]||(nodeLookup[point.from]=this.createNode(point.from)),nodeLookup[point.from].linksFrom.push(point),point.fromNode=nodeLookup[point.from],point.color=point.options.color||nodeLookup[point.from].color),defined(point.to)&&(nodeLookup[point.to]||(nodeLookup[point.to]=this.createNode(point.to)),nodeLookup[point.to].linksTo.push(point),point.toNode=nodeLookup[point.to]),point.name=point.name||point.id},this)},translate:function(){this.processedXData||this.processData(),this.generatePoints(),this.nodeColumns=this.createNodeColumns();var chart=this.chart,inverted=chart.inverted,options=this.options,left=0,nodeWidth=options.nodeWidth,nodeColumns=this.nodeColumns,colDistance=(chart.plotSizeX-nodeWidth)/(nodeColumns.length-1),curvy=(inverted?-colDistance:colDistance)*options.curveFactor,factor=Infinity;each(this.nodeColumns,function(column){var height=chart.plotSizeY-(column.length-1)*options.nodePadding;factor=Math.min(factor,height/column.sum())}),each(this.nodeColumns,function(column){each(column,function(node){var sum=node.getSum(),height=sum*factor,fromNodeTop=column.top(factor)+column.offset(node,factor),nodeLeft=inverted?chart.plotSizeX-left:left;node.sum=sum,node.shapeType="rect",node.shapeArgs=inverted?{x:nodeLeft-nodeWidth,y:chart.plotSizeY-fromNodeTop-height,width:nodeWidth,height:height}:{x:nodeLeft,y:fromNodeTop,width:nodeWidth,height:height},node.shapeArgs.display=node.hasShape()?"":"none",node.plotY=1,each(node.linksFrom,function(point){var linkHeight=point.weight*factor,fromLinkTop=node.offset(point,"linksFrom")*factor,fromY=fromNodeTop+fromLinkTop,toNode=point.toNode,toY=nodeColumns[toNode.column].top(factor)+toNode.offset(point,"linksTo")*factor+nodeColumns[toNode.column].offset(toNode,factor),nodeW=nodeWidth,right=toNode.column*colDistance,outgoing=point.outgoing;inverted&&(fromY=chart.plotSizeY-fromY,toY=chart.plotSizeY-toY,right=chart.plotSizeX-right,nodeW=-nodeW,linkHeight=-linkHeight),point.shapeType="path",point.shapeArgs={d:["M",nodeLeft+nodeW,fromY,"C",nodeLeft+nodeW+curvy,fromY,right-curvy,toY,right,toY,"L",right+(outgoing?nodeW:0),toY+linkHeight/2,"L",right,toY+linkHeight,"C",right-curvy,toY+linkHeight,nodeLeft+nodeW+curvy,fromY+linkHeight,nodeLeft+nodeW,fromY+linkHeight,"z"]},point.dlBox={x:nodeLeft+(right-nodeLeft+nodeW)/2,y:fromY+(toY-fromY)/2,height:linkHeight,width:0},point.y=point.plotY=1,point.color||(point.color=node.color)})}),left+=colDistance},this)},render:function(){var points=this.points;this.points=this.points.concat(this.nodes),H.seriesTypes.column.prototype.render.call(this),this.points=points},animate:H.Series.prototype.animate},{getClassName:function(){return"highcharts-link "+Point.prototype.getClassName.call(this)},isValid:function(){return this.isNode||"number"==typeof this.weight}})});