(function(){var extend=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},hasProp={}.hasOwnProperty;ActiveAdmin.TableCheckboxToggler=function(superClass){function TableCheckboxToggler(){return TableCheckboxToggler.__super__.constructor.apply(this,arguments)}return extend(TableCheckboxToggler,superClass),TableCheckboxToggler.prototype._init=function(){return TableCheckboxToggler.__super__._init.apply(this,arguments)},TableCheckboxToggler.prototype._bind=function(){return TableCheckboxToggler.__super__._bind.apply(this,arguments),this.$container.find("tbody td").click(function(_this){return function(e){return"checkbox"!==e.target.type?_this._didClickCell(e.target):void 0}}(this))},TableCheckboxToggler.prototype._didChangeCheckbox=function(checkbox){return TableCheckboxToggler.__super__._didChangeCheckbox.apply(this,arguments),$(checkbox).parents("tr").toggleClass("selected",checkbox.checked)},TableCheckboxToggler.prototype._didChangeToggleAllCheckbox=function(){return this.$container.find("tbody tr").toggleClass("selected",TableCheckboxToggler.__super__._didChangeToggleAllCheckbox.apply(this,arguments))},TableCheckboxToggler.prototype._didClickCell=function(cell){return $(cell).parent("tr").find(":checkbox").click()},TableCheckboxToggler}(ActiveAdmin.CheckboxToggler),$.widget.bridge("tableCheckboxToggler",ActiveAdmin.TableCheckboxToggler)}).call(this);