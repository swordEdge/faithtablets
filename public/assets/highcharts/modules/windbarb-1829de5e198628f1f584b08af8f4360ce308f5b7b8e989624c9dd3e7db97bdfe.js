"use strict";!function(factory){"object"==typeof module&&module.exports?module.exports=factory:factory(Highcharts)}(function(Highcharts){var H,each,seriesTypes,stableSort;!function(H,onSeriesMixin){var each=H.each;(0,H.seriesType)("windbarb","column",{lineWidth:2,onSeries:null,states:{hover:{lineWidthPlus:0}},tooltip:{pointFormat:"<b>{series.name}</b>: {point.value} ({point.beaufort})<br/>"},vectorLength:20,yOffset:-20},{pointArrayMap:["value","direction"],parallelArrays:["x","value","direction"],beaufortName:["Calm","Light air","Light breeze","Gentle breeze","Moderate breeze","Fresh breeze","Strong breeze","Near gale","Gale","Strong gale","Storm","Violent storm","Hurricane"],beaufortFloor:[0,.3,1.6,3.4,5.5,8,10.8,13.9,17.2,20.8,24.5,28.5,32.7],trackerGroups:["markerGroup"],pointAttribs:function(point,state){var options=this.options,stroke=this.color,strokeWidth=this.options.lineWidth;return state&&(stroke=options.states[state].color||stroke,strokeWidth=(options.states[state].lineWidth||strokeWidth)+(options.states[state].lineWidthPlus||0)),{stroke:stroke,"stroke-width":strokeWidth}},markerAttribs:function(){return undefined},windArrow:function(point){var path,barbs,knots=1.943844*point.value,level=point.beaufortLevel,u=this.options.vectorLength/20,pos=-10;if(point.isNull)return[];if(0===level)return this.chart.renderer.symbols.circle(-10*u,-10*u,20*u,20*u);if(path=["M",0,7*u,"L",-1.5*u,7*u,0,10*u,1.5*u,7*u,0,7*u,0,-10*u],0<(barbs=(knots-knots%50)/50))for(;barbs--;)path.push(-10===pos?"L":"M",0,pos*u,"L",5*u,pos*u+2,"L",0,pos*u+4),knots-=50,pos+=7;if(0<(barbs=(knots-knots%10)/10))for(;barbs--;)path.push(-10===pos?"L":"M",0,pos*u,"L",7*u,pos*u),knots-=10,pos+=3;if(0<(barbs=(knots-knots%5)/5))for(;barbs--;)path.push(-10===pos?"L":"M",0,pos*u,"L",4*u,pos*u),knots-=5,pos+=3;return path},translate:function(){var beaufortFloor=this.beaufortFloor,beaufortName=this.beaufortName;onSeriesMixin.translate.call(this),each(this.points,function(point){for(var level=0;level<beaufortFloor.length&&!(beaufortFloor[level]>point.value);level++);point.beaufortLevel=level-1,point.beaufort=beaufortName[level-1]})},drawPoints:function(){var chart=this.chart,yAxis=this.yAxis;each(this.points,function(point){var plotX=point.plotX,plotY=point.plotY;point.graphic||(point.graphic=this.chart.renderer.path().add(this.markerGroup)),point.graphic.attr({d:this.windArrow(point),translateX:plotX,translateY:plotY+this.options.yOffset,rotation:point.direction}).attr(this.pointAttribs(point)),point.tooltipPos=chart.inverted?[yAxis.len+yAxis.pos-chart.plotLeft-plotY,this.xAxis.len-plotX]:[plotX,plotY+yAxis.pos-chart.plotTop+this.options.yOffset-this.options.vectorLength/2]},this)},animate:function(init){init?this.markerGroup.attr({opacity:.01}):(this.markerGroup.animate({opacity:1},H.animObject(this.options.animation)),this.animate=null)}},{isValid:function(){return H.isNumber(this.value)&&0<=this.value}})}(Highcharts,(each=(H=Highcharts).each,seriesTypes=H.seriesTypes,stableSort=H.stableSort,{translate:function(){seriesTypes.column.prototype.translate.apply(this);var point,lastPoint,leftPoint,lastX,rightPoint,currentDataGrouping,series=this,options=series.options,chart=series.chart,points=series.points,cursor=points.length-1,optionsOnSeries=options.onSeries,onSeries=optionsOnSeries&&chart.get(optionsOnSeries),onKey=options.onKey||"y",step=onSeries&&onSeries.options.step,onData=onSeries&&onSeries.points,i=onData&&onData.length,xAxis=series.xAxis,yAxis=series.yAxis,xAxisExt=xAxis.getExtremes(),xOffset=0;if(onSeries&&onSeries.visible&&i)for(xOffset=(onSeries.pointXOffset||0)+(onSeries.barW||0)/2,currentDataGrouping=onSeries.currentDataGrouping,lastX=onData[i-1].x+(currentDataGrouping?currentDataGrouping.totalRange:0),stableSort(points,function(a,b){return a.x-b.x}),onKey="plot"+onKey[0].toUpperCase()+onKey.substr(1);i--&&points[cursor]&&(point=points[cursor],!((leftPoint=onData[i]).x<=point.x&&leftPoint[onKey]!==undefined&&(point.x<=lastX&&(point.plotY=leftPoint[onKey],leftPoint.x<point.x&&!step&&(rightPoint=onData[i+1])&&rightPoint[onKey]!==undefined&&(point.plotY+=(point.x-leftPoint.x)/(rightPoint.x-leftPoint.x)*(rightPoint[onKey]-leftPoint[onKey]))),i++,--cursor<0))););each(points,function(point,i){var stackIndex;point.plotY===undefined&&(point.x>=xAxisExt.min&&point.x<=xAxisExt.max?point.plotY=chart.chartHeight-xAxis.bottom-(xAxis.opposite?xAxis.height:0)+xAxis.offset-yAxis.top:point.shapeArgs={}),point.plotX+=xOffset,(lastPoint=points[i-1])&&lastPoint.plotX===point.plotX&&(lastPoint.stackIndex===undefined&&(lastPoint.stackIndex=0),stackIndex=lastPoint.stackIndex+1),point.stackIndex=stackIndex})}}))});