"use strict";!function(factory){"object"==typeof module&&module.exports?module.exports=factory:factory(Highcharts)}(function(Highcharts){var H,each,extend,isBoolean,isFn,pick,setTreeValues;!function(H,mixinTreeSeries){var seriesType=H.seriesType,seriesTypes=H.seriesTypes,map=H.map,merge=H.merge,extend=H.extend,noop=H.noop,each=H.each,getColor=mixinTreeSeries.getColor,grep=H.grep,isBoolean=function(x){return"boolean"==typeof x},isNumber=H.isNumber,isString=H.isString,pick=H.pick,Series=H.Series,stableSort=H.stableSort,color=H.Color,eachObject=function(list,func,context){context=context||this,H.objectEach(list,function(val,key){func.call(context,val,key,list)})},reduce=H.reduce,recursive=function(item,func,context){var next;context=context||this,!1!==(next=func.call(context,item))&&recursive(next,func,context)};seriesType("treemap","scatter",{showInLegend:!1,marker:!1,dataLabels:{enabled:!0,defer:!1,verticalAlign:"middle",formatter:function(){return this.point.name||this.point.id},inside:!0},tooltip:{headerFormat:"",pointFormat:"<b>{point.name}</b>: {point.value}<br/>"},ignoreHiddenPoint:!0,layoutAlgorithm:"sliceAndDice",layoutStartingDirection:"vertical",alternateStartingDirection:!1,levelIsConstant:!0,drillUpButton:{position:{align:"right",x:-10,y:10}},borderColor:"#e6e6e6",borderWidth:1,opacity:.15,states:{hover:{borderColor:"#999999",brightness:seriesTypes.heatmap?0:.1,halo:!1,opacity:.75,shadow:!1}}},{pointArrayMap:["value"],axisTypes:seriesTypes.heatmap?["xAxis","yAxis","colorAxis"]:["xAxis","yAxis"],directTouch:!0,optionalAxis:"colorAxis",getSymbol:noop,parallelArrays:["x","y","value","colorValue"],colorKey:"colorValue",translateColors:seriesTypes.heatmap&&seriesTypes.heatmap.prototype.translateColors,colorAttribs:seriesTypes.heatmap&&seriesTypes.heatmap.prototype.colorAttribs,trackerGroups:["group","dataLabelsGroup"],getListOfParents:function(data,ids){var listOfParents=reduce(data||[],function(prev,curr,i){var parent=pick(curr.parent,"");return prev[parent]===undefined&&(prev[parent]=[]),prev[parent].push(i),prev},{});return eachObject(listOfParents,function(children,parent,list){""!==parent&&-1===H.inArray(parent,ids)&&(each(children,function(child){list[""].push(child)}),delete list[parent])}),listOfParents},getTree:function(){var series=this,allIds=map(this.data,function(d){return d.id}),parentList=series.getListOfParents(this.data,allIds);return series.nodeMap=[],series.buildNode("",-1,0,parentList,null)},init:function(chart,options){var series=this;Series.prototype.init.call(series,chart,options),series.options.allowDrillToNode&&H.addEvent(series,"click",series.onClickDrillToNode)},buildNode:function(id,i,level,list,parent){var node,child,series=this,children=[],point=series.points[i],height=0;return each(list[id]||[],function(i){child=series.buildNode(series.points[i].id,i,level+1,list,id),height=Math.max(child.height+1,height),children.push(child)}),node={id:id,i:i,children:children,height:height,level:level,parent:parent,visible:!1},series.nodeMap[node.id]=node,point&&(point.node=node),node},setTreeValues:function(tree){var val,series=this,options=series.options,idRoot=series.rootNode,nodeRoot=series.nodeMap[idRoot],levelIsConstant=!isBoolean(options.levelIsConstant)||options.levelIsConstant,childrenTotal=0,children=[],point=series.points[tree.i];return each(tree.children,function(child){child=series.setTreeValues(child),children.push(child),child.ignore||(childrenTotal+=child.val)}),stableSort(children,function(a,b){return a.sortIndex-b.sortIndex}),val=pick(point&&point.options.value,childrenTotal),point&&(point.value=val),extend(tree,{children:children,childrenTotal:childrenTotal,ignore:!(pick(point&&point.visible,!0)&&0<val),isLeaf:tree.visible&&!childrenTotal,levelDynamic:tree.level-(levelIsConstant?0:nodeRoot.level),name:pick(point&&point.name,""),sortIndex:pick(point&&point.sortIndex,-val),val:val}),tree},calculateChildrenAreas:function(parent,area){var children,series=this,options=series.options,level=this.levelMap[parent.levelDynamic+1],algorithm=pick(series[level&&level.layoutAlgorithm]&&level.layoutAlgorithm,options.layoutAlgorithm),alternate=options.alternateStartingDirection,childrenValues=[];children=grep(parent.children,function(n){return!n.ignore}),level&&level.layoutStartingDirection&&(area.direction="vertical"===level.layoutStartingDirection?0:1),childrenValues=series[algorithm](area,children),each(children,function(child,index){var values=childrenValues[index];child.values=merge(values,{val:child.childrenTotal,direction:alternate?1-area.direction:area.direction}),child.pointValues=merge(values,{x:values.x/series.axisRatio,width:values.width/series.axisRatio}),child.children.length&&series.calculateChildrenAreas(child,child.values)})},setPointValues:function(){var series=this,xAxis=series.xAxis,yAxis=series.yAxis;each(series.points,function(point){var x1,x2,y1,y2,node=point.node,values=node.pointValues,crispCorr=0;crispCorr=(series.pointAttribs(point)["stroke-width"]||0)%2/2,values&&node.visible?(x1=Math.round(xAxis.translate(values.x,0,0,0,1))-crispCorr,x2=Math.round(xAxis.translate(values.x+values.width,0,0,0,1))-crispCorr,y1=Math.round(yAxis.translate(values.y,0,0,0,1))-crispCorr,y2=Math.round(yAxis.translate(values.y+values.height,0,0,0,1))-crispCorr,point.shapeType="rect",point.shapeArgs={x:Math.min(x1,x2),y:Math.min(y1,y2),width:Math.abs(x2-x1),height:Math.abs(y2-y1)},point.plotX=point.shapeArgs.x+point.shapeArgs.width/2,point.plotY=point.shapeArgs.y+point.shapeArgs.height/2):(delete point.plotX,delete point.plotY)})},setColorRecursive:function(node,parentColor,colorIndex,index,siblings){var colorInfo,point,series=this,chart=series&&series.chart,colors=chart&&chart.options&&chart.options.colors;node&&(colorInfo=getColor(node,{colors:colors,index:index,levelMap:series.levelMap,parentColor:parentColor,parentColorIndex:colorIndex,series:series,siblings:siblings}),(point=series.points[node.i])&&(point.color=colorInfo.color,point.colorIndex=colorInfo.colorIndex),each(node.children||[],function(child,i){series.setColorRecursive(child,colorInfo.color,colorInfo.colorIndex,i,node.children.length)}))},algorithmGroup:function(h,w,d,p){this.height=h,this.width=w,this.plot=p,this.direction=d,this.startDirection=d,this.total=0,this.nW=0,this.lW=0,this.nH=0,this.lH=0,this.elArr=[],this.lP={total:0,lH:0,nH:0,lW:0,nW:0,nR:0,lR:0,aspectRatio:function(w,h){return Math.max(w/h,h/w)}},this.addElement=function(el){this.lP.total=this.elArr[this.elArr.length-1],this.total=this.total+el,0===this.direction?(this.lW=this.nW,this.lP.lH=this.lP.total/this.lW,this.lP.lR=this.lP.aspectRatio(this.lW,this.lP.lH),this.nW=this.total/this.height,this.lP.nH=this.lP.total/this.nW,this.lP.nR=this.lP.aspectRatio(this.nW,this.lP.nH)):(this.lH=this.nH,this.lP.lW=this.lP.total/this.lH,this.lP.lR=this.lP.aspectRatio(this.lP.lW,this.lH),this.nH=this.total/this.width,this.lP.nW=this.lP.total/this.nH,this.lP.nR=this.lP.aspectRatio(this.lP.nW,this.nH)),this.elArr.push(el)},this.reset=function(){this.nW=0,this.lW=0,this.elArr=[],this.total=0}},algorithmCalcPoints:function(directionChange,last,group,childrenArea){var pX,pY,pW,pH,keep,gW=group.lW,gH=group.lH,plot=group.plot,i=0,end=group.elArr.length-1;last?(gW=group.nW,gH=group.nH):keep=group.elArr[group.elArr.length-1],each(group.elArr,function(p){(last||i<end)&&(0===group.direction?(pX=plot.x,pY=plot.y,pH=p/(pW=gW)):(pX=plot.x,pY=plot.y,pW=p/(pH=gH)),childrenArea.push({x:pX,y:pY,width:pW,height:pH}),0===group.direction?plot.y=plot.y+pH:plot.x=plot.x+pW),i+=1}),group.reset(),0===group.direction?group.width=group.width-gW:group.height=group.height-gH,plot.y=plot.parent.y+(plot.parent.height-group.height),plot.x=plot.parent.x+(plot.parent.width-group.width),directionChange&&(group.direction=1-group.direction),last||group.addElement(keep)},algorithmLowAspectRatio:function(directionChange,parent,children){var pTot,childrenArea=[],series=this,plot={x:parent.x,y:parent.y,parent:parent},direction=parent.direction,i=0,end=children.length-1,group=new this.algorithmGroup(parent.height,parent.width,direction,plot);return each(children,function(child){pTot=parent.width*parent.height*(child.val/parent.val),group.addElement(pTot),group.lP.nR>group.lP.lR&&series.algorithmCalcPoints(directionChange,!1,group,childrenArea,plot),i===end&&series.algorithmCalcPoints(directionChange,!0,group,childrenArea,plot),i+=1}),childrenArea},algorithmFill:function(directionChange,parent,children){var pTot,pX,pY,pW,pH,childrenArea=[],direction=parent.direction,x=parent.x,y=parent.y,width=parent.width,height=parent.height;return each(children,function(child){pTot=parent.width*parent.height*(child.val/parent.val),pX=x,pY=y,0===direction?(width-=pW=pTot/(pH=height),x+=pW):(height-=pH=pTot/(pW=width),y+=pH),childrenArea.push({x:pX,y:pY,width:pW,height:pH}),directionChange&&(direction=1-direction)}),childrenArea},strip:function(parent,children){return this.algorithmLowAspectRatio(!1,parent,children)},squarified:function(parent,children){return this.algorithmLowAspectRatio(!0,parent,children)},sliceAndDice:function(parent,children){return this.algorithmFill(!0,parent,children)},stripes:function(parent,children){return this.algorithmFill(!1,parent,children)},translate:function(){var rootNode,pointValues,seriesArea,tree,val,series=this,rootId=series.rootNode=pick(series.rootNode,series.options.rootId,"");Series.prototype.translate.call(series),series.levelMap=reduce(series.options.levels||[],function(arr,item){return arr[item.level]=item,arr},{}),tree=series.tree=series.getTree(),rootNode=series.nodeMap[rootId],""===rootId||rootNode&&rootNode.children.length||(series.drillToNode("",!1),rootId=series.rootNode,rootNode=series.nodeMap[rootId]),recursive(series.nodeMap[series.rootNode],function(node){var next=!1,p=node.parent;return node.visible=!0,(p||""===p)&&(next=series.nodeMap[p]),next}),recursive(series.nodeMap[series.rootNode].children,function(children){var next=!1;return each(children,function(child){child.visible=!0,child.children.length&&(next=(next||[]).concat(child.children))}),next}),series.setTreeValues(tree),series.axisRatio=series.xAxis.len/series.yAxis.len,series.nodeMap[""].pointValues=pointValues={x:0,y:0,width:100,height:100},series.nodeMap[""].values=seriesArea=merge(pointValues,{width:pointValues.width*series.axisRatio,direction:"vertical"===series.options.layoutStartingDirection?0:1,val:tree.val}),series.calculateChildrenAreas(tree,seriesArea),series.colorAxis?series.translateColors():series.options.colorByPoint||series.setColorRecursive(series.tree),series.options.allowDrillToNode&&(val=rootNode.pointValues,series.xAxis.setExtremes(val.x,val.x+val.width,!1),series.yAxis.setExtremes(val.y,val.y+val.height,!1),series.xAxis.setScale(),series.yAxis.setScale()),series.setPointValues()},drawDataLabels:function(){var options,level,series=this,points=grep(series.points,function(n){return n.node.visible});each(points,function(point){level=series.levelMap[point.node.levelDynamic],options={style:{}},point.node.isLeaf||(options.enabled=!1),level&&level.dataLabels&&(options=merge(options,level.dataLabels),series._hasPointLabels=!0),point.shapeArgs&&(options.style.width=point.shapeArgs.width,point.dataLabel&&point.dataLabel.css({width:point.shapeArgs.width+"px"})),point.dlOptions=merge(options,point.options.dataLabels)}),Series.prototype.drawDataLabels.call(this)},alignDataLabel:function(point){seriesTypes.column.prototype.alignDataLabel.apply(this,arguments),point.dataLabel&&point.dataLabel.attr({zIndex:(point.node.zIndex||0)+1})},pointAttribs:function(point,state){var attr,opacity,level=point&&this.levelMap[point.node.levelDynamic]||{},options=this.options,stateOptions=state&&options.states[state]||{},className=point&&point.getClassName()||"";return attr={stroke:point&&point.borderColor||level.borderColor||stateOptions.borderColor||options.borderColor,"stroke-width":pick(point&&point.borderWidth,level.borderWidth,stateOptions.borderWidth,options.borderWidth),dashstyle:point&&point.borderDashStyle||level.borderDashStyle||stateOptions.borderDashStyle||options.borderDashStyle,fill:point&&point.color||this.color},-1!==className.indexOf("highcharts-above-level")?(attr.fill="none",attr["stroke-width"]=0):-1!==className.indexOf("highcharts-internal-node-interactive")?(opacity=pick(stateOptions.opacity,options.opacity),attr.fill=color(attr.fill).setOpacity(opacity).get(),attr.cursor="pointer"):-1!==className.indexOf("highcharts-internal-node")?attr.fill="none":state&&(attr.fill=color(attr.fill).brighten(stateOptions.brightness).get()),attr},drawPoints:function(){var series=this,points=grep(series.points,function(n){return n.node.visible});each(points,function(point){var groupKey="level-group-"+point.node.levelDynamic;series[groupKey]||(series[groupKey]=series.chart.renderer.g(groupKey).attr({zIndex:1e3-point.node.levelDynamic}).add(series.group)),point.group=series[groupKey]}),seriesTypes.column.prototype.drawPoints.call(this),series.options.allowDrillToNode&&each(points,function(point){point.graphic&&(point.drillId=series.options.interactByLeaf?series.drillToByLeaf(point):series.drillToByGroup(point))})},onClickDrillToNode:function(event){var series=this,point=event.point,drillId=point&&point.drillId;isString(drillId)&&(point.setState(""),series.drillToNode(drillId))},drillToByGroup:function(point){var series=this,drillId=!1;return point.node.level-series.nodeMap[series.rootNode].level!=1||point.node.isLeaf||(drillId=point.id),drillId},drillToByLeaf:function(point){var nodeParent,series=this,drillId=!1;if(point.node.parent!==series.rootNode&&point.node.isLeaf)for(nodeParent=point.node;!drillId;)(nodeParent=series.nodeMap[nodeParent.parent]).parent===series.rootNode&&(drillId=nodeParent.id);return drillId},drillUp:function(){var series=this,node=series.nodeMap[series.rootNode];node&&isString(node.parent)&&series.drillToNode(node.parent)},drillToNode:function(id,redraw){var series=this,node=series.nodeMap[id];series.idPreviousRoot=series.rootNode,""===(series.rootNode=id)?series.drillUpButton=series.drillUpButton.destroy():series.showDrillUpButton(node&&node.name||id),this.isDirty=!0,pick(redraw,!0)&&this.chart.redraw()},showDrillUpButton:function(name){var attr,states,series=this,backText=name||"< Back",buttonOptions=series.options.drillUpButton;buttonOptions.text&&(backText=buttonOptions.text),this.drillUpButton?this.drillUpButton.attr({text:backText}).align():(states=(attr=buttonOptions.theme)&&attr.states,this.drillUpButton=this.chart.renderer.button(backText,null,null,function(){series.drillUp()},attr,states&&states.hover,states&&states.select).attr({align:buttonOptions.position.align,zIndex:7}).add().align(buttonOptions.position,!1,buttonOptions.relativeTo||"plotBox"))},buildKDTree:noop,drawLegendSymbol:H.LegendSymbolMixin.drawRectangle,getExtremes:function(){Series.prototype.getExtremes.call(this,this.colorValueData),this.valueMin=this.dataMin,this.valueMax=this.dataMax,Series.prototype.getExtremes.call(this)},getExtremesFromAll:!0,bindAxes:function(){var treeAxis={endOnTick:!1,gridLineWidth:0,lineWidth:0,min:0,dataMin:0,minPadding:0,max:100,dataMax:100,maxPadding:0,startOnTick:!1,title:null,tickPositions:[]};Series.prototype.bindAxes.call(this),H.extend(this.yAxis.options,treeAxis),H.extend(this.xAxis.options,treeAxis)},utils:{recursive:recursive,reduce:reduce}},{getClassName:function(){var className=H.Point.prototype.getClassName.call(this),series=this.series,options=series.options;return this.node.level<=series.nodeMap[series.rootNode].level?className+=" highcharts-above-level":this.node.isLeaf||pick(options.interactByLeaf,!options.allowDrillToNode)?this.node.isLeaf||(className+=" highcharts-internal-node"):className+=" highcharts-internal-node-interactive",className},isValid:function(){return this.id||isNumber(this.value)},setState:function(state){H.Point.prototype.setState.call(this,state),this.graphic&&this.graphic.attr({zIndex:"hover"===state?1:0})},setVisible:seriesTypes.pie.prototype.pointClass.prototype.setVisible})}(Highcharts,(each=(H=Highcharts).each,extend=H.extend,isBoolean=function(x){return"boolean"==typeof x},isFn=function(x){return"function"==typeof x},pick=H.pick,{getColor:function getColor(node,options){function variation(color){var colorVariation=level&&level.colorVariation;return colorVariation&&"brightness"===colorVariation.key?H.color(color).brighten(colorVariation.to*(index/siblings)).get():color}var point,level,colorByPoint,colorIndexByPoint,color,colorIndex,index=options.index,levelMap=options.levelMap,parentColor=options.parentColor,parentColorIndex=options.parentColorIndex,series=options.series,colors=options.colors,siblings=options.siblings,points=series.points;return node&&(point=points[node.i],level=levelMap[node.levelDynamic]||{},point&&(isBoolean(level.colorByPoint)?level.colorByPoint:!!series.options.colorByPoint)&&(colorIndexByPoint=point.index%(colors?colors.length:series.chart.options.chart.colorCount),colorByPoint=colors&&colors[colorIndexByPoint]),color=pick(point&&point.options.color,level&&level.color,colorByPoint,parentColor&&variation(parentColor),series.color),colorIndex=pick(point&&point.options.colorIndex,level&&level.colorIndex,colorIndexByPoint,parentColorIndex,options.colorIndex)),{color:color,colorIndex:colorIndex}},setTreeValues:setTreeValues=function setTreeValues(tree,options){var value,before=options.before,idRoot=options.idRoot,nodeRoot=options.mapIdToNode[idRoot],levelIsConstant=!isBoolean(options.levelIsConstant)||options.levelIsConstant,point=options.points[tree.i],optionsPoint=point&&point.options||{},childrenTotal=0,children=[];return extend(tree,{levelDynamic:tree.level-(levelIsConstant?0:nodeRoot.level),name:pick(point&&point.name,""),visible:idRoot===tree.id||!!isBoolean(options.visible)&&options.visible}),isFn(before)&&(tree=before(tree,options)),each(tree.children,function(child,i){var newOptions=extend({},options);extend(newOptions,{index:i,siblings:tree.children.length,visible:tree.visible}),child=setTreeValues(child,newOptions),children.push(child),child.visible&&(childrenTotal+=child.val)}),tree.visible=0<childrenTotal||tree.visible,value=pick(optionsPoint.value,childrenTotal),extend(tree,{children:children,childrenTotal:childrenTotal,isLeaf:tree.visible&&!childrenTotal,val:value}),tree}}))});