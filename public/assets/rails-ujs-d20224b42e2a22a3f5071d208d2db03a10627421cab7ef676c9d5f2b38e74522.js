(function(){var context=this;(function(){(function(){this.Rails={linkClickSelector:"a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]",buttonClickSelector:{selector:"button[data-remote]:not([form]), button[data-confirm]:not([form])",exclude:"form button"},inputChangeSelector:"select[data-remote], input[data-remote], textarea[data-remote]",formSubmitSelector:"form",formInputClickSelector:"form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])",formDisableSelector:"input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled",formEnableSelector:"input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled",fileInputSelector:"input[name][type=file]:not([disabled])",linkDisableSelector:"a[data-disable-with], a[data-disable]",buttonDisableSelector:"button[data-remote][data-disable-with], button[data-remote][data-disable]"}}).call(this)}).call(context);var Rails=context.Rails;(function(){(function(){Rails.cspNonce=function(){var meta;return(meta=document.querySelector("meta[name=csp-nonce]"))&&meta.content}}).call(this),function(){var expando,m;m=Element.prototype.matches||Element.prototype.matchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||Element.prototype.webkitMatchesSelector,Rails.matches=function(element,selector){return null!=selector.exclude?m.call(element,selector.selector)&&!m.call(element,selector.exclude):m.call(element,selector)},expando="_ujsData",Rails.getData=function(element,key){var ref;return null!=(ref=element[expando])?ref[key]:void 0},Rails.setData=function(element,key,value){return null==element[expando]&&(element[expando]={}),element[expando][key]=value},Rails.$=function(selector){return Array.prototype.slice.call(document.querySelectorAll(selector))}}.call(this),function(){var $,csrfParam,csrfToken;$=Rails.$,csrfToken=Rails.csrfToken=function(){var meta;return(meta=document.querySelector("meta[name=csrf-token]"))&&meta.content},csrfParam=Rails.csrfParam=function(){var meta;return(meta=document.querySelector("meta[name=csrf-param]"))&&meta.content},Rails.CSRFProtection=function(xhr){var token;if(null!=(token=csrfToken()))return xhr.setRequestHeader("X-CSRF-Token",token)},Rails.refreshCSRFTokens=function(){var param,token;if(token=csrfToken(),param=csrfParam(),null!=token&&null!=param)return $('form input[name="'+param+'"]').forEach(function(input){return input.value=token})}}.call(this),function(){var CustomEvent,fire,matches,preventDefault;matches=Rails.matches,"function"!=typeof(CustomEvent=window.CustomEvent)&&((CustomEvent=function(event,params){var evt;return(evt=document.createEvent("CustomEvent")).initCustomEvent(event,params.bubbles,params.cancelable,params.detail),evt}).prototype=window.Event.prototype,preventDefault=CustomEvent.prototype.preventDefault,CustomEvent.prototype.preventDefault=function(){var result;return result=preventDefault.call(this),this.cancelable&&!this.defaultPrevented&&Object.defineProperty(this,"defaultPrevented",{get:function(){return!0}}),result}),fire=Rails.fire=function(obj,name,data){var event;return event=new CustomEvent(name,{bubbles:!0,cancelable:!0,detail:data}),obj.dispatchEvent(event),!event.defaultPrevented},Rails.stopEverything=function(e){return fire(e.target,"ujs:everythingStopped"),e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation()},Rails.delegate=function(element,selector,eventType,handler){return element.addEventListener(eventType,function(e){var target;for(target=e.target;target instanceof Element&&!matches(target,selector);)target=target.parentNode;if(target instanceof Element&&!1===handler.call(target,e))return e.preventDefault(),e.stopPropagation()})}}.call(this),function(){var AcceptHeaders,CSRFProtection,createXHR,cspNonce,prepareOptions,processResponse;cspNonce=Rails.cspNonce,CSRFProtection=Rails.CSRFProtection,Rails.fire,AcceptHeaders={"*":"*/*",text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript",script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},Rails.ajax=function(options){var xhr;return options=prepareOptions(options),xhr=createXHR(options,function(){var ref,response;return response=processResponse(null!=(ref=xhr.response)?ref:xhr.responseText,xhr.getResponseHeader("Content-Type")),2===Math.floor(xhr.status/100)?"function"==typeof options.success&&options.success(response,xhr.statusText,xhr):"function"==typeof options.error&&options.error(response,xhr.statusText,xhr),"function"==typeof options.complete?options.complete(xhr,xhr.statusText):void 0}),!(null!=options.beforeSend&&!options.beforeSend(xhr,options))&&(xhr.readyState===XMLHttpRequest.OPENED?xhr.send(options.data):void 0)},prepareOptions=function(options){return options.url=options.url||location.href,options.type=options.type.toUpperCase(),"GET"===options.type&&options.data&&(options.url.indexOf("?")<0?options.url+="?"+options.data:options.url+="&"+options.data),null==AcceptHeaders[options.dataType]&&(options.dataType="*"),options.accept=AcceptHeaders[options.dataType],"*"!==options.dataType&&(options.accept+=", */*; q=0.01"),options},createXHR=function(options,done){var xhr;return(xhr=new XMLHttpRequest).open(options.type,options.url,!0),xhr.setRequestHeader("Accept",options.accept),"string"==typeof options.data&&xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),options.crossDomain||xhr.setRequestHeader("X-Requested-With","XMLHttpRequest"),CSRFProtection(xhr),xhr.withCredentials=!!options.withCredentials,xhr.onreadystatechange=function(){if(xhr.readyState===XMLHttpRequest.DONE)return done(xhr)},xhr},processResponse=function(response,type){var parser,script;if("string"==typeof response&&"string"==typeof type)if(type.match(/\bjson\b/))try{response=JSON.parse(response)}catch(error){}else if(type.match(/\b(?:java|ecma)script\b/))(script=document.createElement("script")).setAttribute("nonce",cspNonce()),script.text=response,document.head.appendChild(script).parentNode.removeChild(script);else if(type.match(/\b(xml|html|svg)\b/)){parser=new DOMParser,type=type.replace(/;.+/,"");try{response=parser.parseFromString(response,type)}catch(error){}}return response},Rails.href=function(element){return element.href},Rails.isCrossDomain=function(url){var originAnchor,urlAnchor;(originAnchor=document.createElement("a")).href=location.href,urlAnchor=document.createElement("a");try{return urlAnchor.href=url,!((!urlAnchor.protocol||":"===urlAnchor.protocol)&&!urlAnchor.host||originAnchor.protocol+"//"+originAnchor.host==urlAnchor.protocol+"//"+urlAnchor.host)}catch(error){return error,!0}}}.call(this),function(){var matches,toArray;matches=Rails.matches,toArray=function(e){return Array.prototype.slice.call(e)},Rails.serializeElement=function(element,additionalParam){var inputs,params;return inputs=[element],matches(element,"form")&&(inputs=toArray(element.elements)),params=[],inputs.forEach(function(input){if(input.name&&!input.disabled)return matches(input,"select")?toArray(input.options).forEach(function(option){if(option.selected)return params.push({name:input.name,value:option.value})}):input.checked||-1===["radio","checkbox","submit"].indexOf(input.type)?params.push({name:input.name,value:input.value}):void 0}),additionalParam&&params.push(additionalParam),params.map(function(param){return null!=param.name?encodeURIComponent(param.name)+"="+encodeURIComponent(param.value):param}).join("&")},Rails.formElements=function(form,selector){return matches(form,"form")?toArray(form.elements).filter(function(el){return matches(el,selector)}):toArray(form.querySelectorAll(selector))}}.call(this),function(){var allowAction,fire,stopEverything;fire=Rails.fire,stopEverything=Rails.stopEverything,Rails.handleConfirm=function(e){if(!allowAction(this))return stopEverything(e)},allowAction=function(element){var answer,callback,message;if(!(message=element.getAttribute("data-confirm")))return!0;if(answer=!1,fire(element,"confirm")){try{answer=confirm(message)}catch(error){}callback=fire(element,"confirm:complete",[answer])}return answer&&callback}}.call(this),function(){var disableFormElement,disableFormElements,disableLinkElement,enableFormElement,enableFormElements,enableLinkElement,formElements,getData,matches,setData,stopEverything;matches=Rails.matches,getData=Rails.getData,setData=Rails.setData,stopEverything=Rails.stopEverything,formElements=Rails.formElements,Rails.handleDisabledElement=function(e){if(this.disabled)return stopEverything(e)},Rails.enableElement=function(e){var element;return element=e instanceof Event?e.target:e,matches(element,Rails.linkDisableSelector)?enableLinkElement(element):matches(element,Rails.buttonDisableSelector)||matches(element,Rails.formEnableSelector)?enableFormElement(element):matches(element,Rails.formSubmitSelector)?enableFormElements(element):void 0},Rails.disableElement=function(e){var element;return element=e instanceof Event?e.target:e,matches(element,Rails.linkDisableSelector)?disableLinkElement(element):matches(element,Rails.buttonDisableSelector)||matches(element,Rails.formDisableSelector)?disableFormElement(element):matches(element,Rails.formSubmitSelector)?disableFormElements(element):void 0},disableLinkElement=function(element){var replacement;return null!=(replacement=element.getAttribute("data-disable-with"))&&(setData(element,"ujs:enable-with",element.innerHTML),element.innerHTML=replacement),element.addEventListener("click",stopEverything),setData(element,"ujs:disabled",!0)},enableLinkElement=function(element){var originalText;return null!=(originalText=getData(element,"ujs:enable-with"))&&(element.innerHTML=originalText,setData(element,"ujs:enable-with",null)),element.removeEventListener("click",stopEverything),setData(element,"ujs:disabled",null)},disableFormElements=function(form){return formElements(form,Rails.formDisableSelector).forEach(disableFormElement)},disableFormElement=function(element){var replacement;return null!=(replacement=element.getAttribute("data-disable-with"))&&(matches(element,"button")?(setData(element,"ujs:enable-with",element.innerHTML),element.innerHTML=replacement):(setData(element,"ujs:enable-with",element.value),element.value=replacement)),element.disabled=!0,setData(element,"ujs:disabled",!0)},enableFormElements=function(form){return formElements(form,Rails.formEnableSelector).forEach(enableFormElement)},enableFormElement=function(element){var originalText;return null!=(originalText=getData(element,"ujs:enable-with"))&&(matches(element,"button")?element.innerHTML=originalText:element.value=originalText,setData(element,"ujs:enable-with",null)),element.disabled=!1,setData(element,"ujs:disabled",null)}}.call(this),function(){var stopEverything;stopEverything=Rails.stopEverything,Rails.handleMethod=function(e){var csrfParam,csrfToken,form,formContent,href,link,method;if(method=(link=this).getAttribute("data-method"))return href=Rails.href(link),csrfToken=Rails.csrfToken(),csrfParam=Rails.csrfParam(),form=document.createElement("form"),formContent="<input name='_method' value='"+method+"' type='hidden' />",null==csrfParam||null==csrfToken||Rails.isCrossDomain(href)||(formContent+="<input name='"+csrfParam+"' value='"+csrfToken+"' type='hidden' />"),formContent+='<input type="submit" />',form.method="post",form.action=href,form.target=link.target,form.innerHTML=formContent,form.style.display="none",document.body.appendChild(form),form.querySelector('[type="submit"]').click(),stopEverything(e)}}.call(this),function(){var ajax,fire,getData,isCrossDomain,isRemote,matches,serializeElement,setData,stopEverything,slice=[].slice;matches=Rails.matches,getData=Rails.getData,setData=Rails.setData,fire=Rails.fire,stopEverything=Rails.stopEverything,ajax=Rails.ajax,isCrossDomain=Rails.isCrossDomain,serializeElement=Rails.serializeElement,isRemote=function(element){var value;return null!=(value=element.getAttribute("data-remote"))&&"false"!==value},Rails.handleRemote=function(e){var button,data,dataType,element,method,url,withCredentials;return!isRemote(element=this)||(fire(element,"ajax:before")?(withCredentials=element.getAttribute("data-with-credentials"),dataType=element.getAttribute("data-type")||"script",matches(element,Rails.formSubmitSelector)?(button=getData(element,"ujs:submit-button"),method=getData(element,"ujs:submit-button-formmethod")||element.method,url=getData(element,"ujs:submit-button-formaction")||element.getAttribute("action")||location.href,"GET"===method.toUpperCase()&&(url=url.replace(/\?.*$/,"")),"multipart/form-data"===element.enctype?(data=new FormData(element),null!=button&&data.append(button.name,button.value)):data=serializeElement(element,button),setData(element,"ujs:submit-button",null),setData(element,"ujs:submit-button-formmethod",null),setData(element,"ujs:submit-button-formaction",null)):data=matches(element,Rails.buttonClickSelector)||matches(element,Rails.inputChangeSelector)?(method=element.getAttribute("data-method"),url=element.getAttribute("data-url"),serializeElement(element,element.getAttribute("data-params"))):(method=element.getAttribute("data-method"),url=Rails.href(element),element.getAttribute("data-params")),ajax({type:method||"GET",url:url,data:data,dataType:dataType,beforeSend:function(xhr,options){return fire(element,"ajax:beforeSend",[xhr,options])?fire(element,"ajax:send",[xhr]):(fire(element,"ajax:stopped"),!1)},success:function(){var args;return args=1<=arguments.length?slice.call(arguments,0):[],fire(element,"ajax:success",args)},error:function(){var args;return args=1<=arguments.length?slice.call(arguments,0):[],fire(element,"ajax:error",args)},complete:function(){var args;return args=1<=arguments.length?slice.call(arguments,0):[],fire(element,"ajax:complete",args)},crossDomain:isCrossDomain(url),withCredentials:null!=withCredentials&&"false"!==withCredentials}),stopEverything(e)):(fire(element,"ajax:stopped"),!1))},Rails.formSubmitButtonClick=function(){var button,form;if(form=(button=this).form)return button.name&&setData(form,"ujs:submit-button",{name:button.name,value:button.value}),setData(form,"ujs:formnovalidate-button",button.formNoValidate),setData(form,"ujs:submit-button-formaction",button.getAttribute("formaction")),setData(form,"ujs:submit-button-formmethod",button.getAttribute("formmethod"))},Rails.handleMetaClick=function(e){var data,link,method;if(method=((link=this).getAttribute("data-method")||"GET").toUpperCase(),data=link.getAttribute("data-params"),(e.metaKey||e.ctrlKey)&&"GET"===method&&!data)return e.stopImmediatePropagation()}}.call(this),function(){var $,CSRFProtection,delegate,disableElement,enableElement,fire,formSubmitButtonClick,getData,handleConfirm,handleDisabledElement,handleMetaClick,handleMethod,handleRemote,refreshCSRFTokens;fire=Rails.fire,delegate=Rails.delegate,getData=Rails.getData,$=Rails.$,refreshCSRFTokens=Rails.refreshCSRFTokens,CSRFProtection=Rails.CSRFProtection,enableElement=Rails.enableElement,disableElement=Rails.disableElement,handleDisabledElement=Rails.handleDisabledElement,handleConfirm=Rails.handleConfirm,handleRemote=Rails.handleRemote,formSubmitButtonClick=Rails.formSubmitButtonClick,handleMetaClick=Rails.handleMetaClick,handleMethod=Rails.handleMethod,"undefined"==typeof jQuery||null===jQuery||null==jQuery.ajax||jQuery.rails||(jQuery.rails=Rails,jQuery.ajaxPrefilter(function(options,originalOptions,xhr){if(!options.crossDomain)return CSRFProtection(xhr)})),Rails.start=function(){if(window._rails_loaded)throw new Error("rails-ujs has already been loaded!");return window.addEventListener("pageshow",function(){return $(Rails.formEnableSelector).forEach(function(el){if(getData(el,"ujs:disabled"))return enableElement(el)}),$(Rails.linkDisableSelector).forEach(function(el){if(getData(el,"ujs:disabled"))return enableElement(el)})}),delegate(document,Rails.linkDisableSelector,"ajax:complete",enableElement),delegate(document,Rails.linkDisableSelector,"ajax:stopped",enableElement),delegate(document,Rails.buttonDisableSelector,"ajax:complete",enableElement),delegate(document,Rails.buttonDisableSelector,"ajax:stopped",enableElement),delegate(document,Rails.linkClickSelector,"click",handleDisabledElement),delegate(document,Rails.linkClickSelector,"click",handleConfirm),delegate(document,Rails.linkClickSelector,"click",handleMetaClick),delegate(document,Rails.linkClickSelector,"click",disableElement),delegate(document,Rails.linkClickSelector,"click",handleRemote),delegate(document,Rails.linkClickSelector,"click",handleMethod),delegate(document,Rails.buttonClickSelector,"click",handleDisabledElement),delegate(document,Rails.buttonClickSelector,"click",handleConfirm),delegate(document,Rails.buttonClickSelector,"click",disableElement),delegate(document,Rails.buttonClickSelector,"click",handleRemote),delegate(document,Rails.inputChangeSelector,"change",handleDisabledElement),delegate(document,Rails.inputChangeSelector,"change",handleConfirm),delegate(document,Rails.inputChangeSelector,"change",handleRemote),delegate(document,Rails.formSubmitSelector,"submit",handleDisabledElement),delegate(document,Rails.formSubmitSelector,"submit",handleConfirm),delegate(document,Rails.formSubmitSelector,"submit",handleRemote),delegate(document,Rails.formSubmitSelector,"submit",function(e){return setTimeout(function(){return disableElement(e)},13)}),delegate(document,Rails.formSubmitSelector,"ajax:send",disableElement),delegate(document,Rails.formSubmitSelector,"ajax:complete",enableElement),delegate(document,Rails.formInputClickSelector,"click",handleDisabledElement),delegate(document,Rails.formInputClickSelector,"click",handleConfirm),delegate(document,Rails.formInputClickSelector,"click",formSubmitButtonClick),document.addEventListener("DOMContentLoaded",refreshCSRFTokens),window._rails_loaded=!0},window.Rails===Rails&&fire(document,"rails:attachBindings")&&Rails.start()}.call(this)}).call(this),"object"==typeof module&&module.exports?module.exports=Rails:"function"==typeof define&&define.amd&&define(Rails)}).call(this);