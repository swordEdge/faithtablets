"use strict";!function(factory){"object"==typeof module&&module.exports?module.exports=factory:factory(Highcharts)}(function(Highcharts){!function(H){function addFormattedValue(proceed){var formattedValue,yAxisOptions,labelFormat,yAxis,chart=this.series&&this.series.chart,config=proceed.apply(this,Array.prototype.slice.call(arguments,1));return chart&&chart.hasParallelCoordinates&&!defined(config.formattedValue)&&(yAxisOptions=(yAxis=chart.yAxis[this.x]).options,formattedValue=(labelFormat=pick(yAxisOptions.tooltipValueFormat,yAxisOptions.labels.format))?H.format(labelFormat,extend(this,{value:this.y})):yAxis.isDatetimeAxis?H.dateFormat(yAxisOptions.dateTimeLabelFormats[yAxis.tickPositions.info.unitName],this.y):yAxisOptions.categories?yAxisOptions.categories[this.y]:this.y,config.formattedValue=config.point.formattedValue=formattedValue),config}var SeriesProto=H.Series.prototype,ChartProto=H.Chart.prototype,AxisProto=H.Axis.prototype,pick=H.pick,each=H.each,wrap=H.wrap,merge=H.merge,erase=H.erase,splat=H.splat,extend=H.extend,defined=H.defined,arrayMin=H.arrayMin,arrayMax=H.arrayMax,defaultXAxisOptions={lineWidth:0,tickLength:0,opposite:!0,type:"category"},defaultParallelOptions={parallelCoordinates:!1,parallelAxes:{lineWidth:1,title:{text:"",reserveSpace:!1},labels:{x:0,y:4,align:"center",reserveSpace:!1},offset:0}};H.setOptions({chart:defaultParallelOptions}),wrap(ChartProto,"init",function(proceed,options,callback){var defaultyAxis=splat(options.yAxis||{}),yAxisLength=defaultyAxis.length,newYAxes=[];if(this.hasParallelCoordinates=options.chart&&options.chart.parallelCoordinates,this.hasParallelCoordinates){for(this.setParallelInfo(options);yAxisLength<=this.parallelInfo.counter;yAxisLength++)newYAxes.push({});(options=merge({legend:{enabled:!1}},options,{boost:{seriesThreshold:Number.MAX_SAFE_INTEGER},plotOptions:{series:{boostThreshold:Number.MAX_SAFE_INTEGER}}})).yAxis=defaultyAxis.concat(newYAxes),options.xAxis=merge(defaultXAxisOptions,splat(options.xAxis||{})[0])}return proceed.call(this,options,callback)}),wrap(ChartProto,"update",function(proceed,options){return options.chart&&(defined(options.chart.parallelCoordinates)&&(this.hasParallelCoordinates=options.chart.parallelCoordinates),this.hasParallelCoordinates&&options.chart.parallelAxes&&(this.options.chart.parallelAxes=merge(this.options.chart.parallelAxes,options.chart.parallelAxes),each(this.yAxis,function(axis){axis.update({},!1)}))),proceed.apply(this,Array.prototype.slice.call(arguments,1))}),extend(ChartProto,{setParallelInfo:function(options){var chart=this,seriesOptions=options.series;chart.parallelInfo={counter:0},each(seriesOptions,function(series){series.data&&(chart.parallelInfo.counter=Math.max(chart.parallelInfo.counter,series.data.length-1))})}}),AxisProto.keepProps.push("parallelPosition"),wrap(AxisProto,"setOptions",function(proceed,userOptions){var axis=this,chart=axis.chart,axisPosition=["left","width","height","top"];proceed.apply(axis,Array.prototype.slice.call(arguments,1)),chart.hasParallelCoordinates&&(chart.inverted&&(axisPosition=axisPosition.reverse()),axis.isXAxis?axis.options=merge(axis.options,defaultXAxisOptions,userOptions):(axis.options=merge(axis.options,axis.chart.options.chart.parallelAxes,userOptions),axis.parallelPosition=pick(axis.parallelPosition,chart.yAxis.length),axis.setParallelPosition(axisPosition,axis.options)))}),wrap(AxisProto,"getSeriesExtremes",function(proceed){if(this.chart&&this.chart.hasParallelCoordinates&&!this.isXAxis){var index=this.parallelPosition,currentPoints=[];each(this.series,function(series){defined(series.yData[index])&&currentPoints.push(series.yData[index])}),this.dataMin=arrayMin(currentPoints),this.dataMax=arrayMax(currentPoints)}else proceed.apply(this,Array.prototype.slice.call(arguments,1))}),extend(AxisProto,{setParallelPosition:function(axisPosition,options){options[axisPosition[0]]=100*(this.parallelPosition+.5)/(this.chart.parallelInfo.counter+1)+"%",this[axisPosition[1]]=options[axisPosition[1]]=0,this[axisPosition[2]]=options[axisPosition[2]]=null,this[axisPosition[3]]=options[axisPosition[3]]=null}}),wrap(SeriesProto,"bindAxes",function(proceed){if(this.chart.hasParallelCoordinates){var series=this;each(this.chart.axes,function(axis){series.insert(axis.series),axis.isDirty=!0}),series.xAxis=this.chart.xAxis[0],series.yAxis=this.chart.yAxis[0]}else proceed.apply(this,Array.prototype.slice.call(arguments,1))}),wrap(SeriesProto,"translate",function(proceed){proceed.apply(this,Array.prototype.slice.call(arguments,1));var lastPlotX,point,i,series=this,chart=this.chart,points=series.points,dataLength=points&&points.length,closestPointRangePx=Number.MAX_VALUE;if(this.chart.hasParallelCoordinates){for(i=0;i<dataLength;i++)point=points[i],defined(point.y)?(point.plotX=point.clientX=chart.inverted?chart.plotHeight-chart.yAxis[i].top+chart.plotTop:chart.yAxis[i].left-chart.plotLeft,point.plotY=chart.yAxis[i].translate(point.y,!1,!0,null,!0),lastPlotX!==undefined&&(closestPointRangePx=Math.min(closestPointRangePx,Math.abs(point.plotX-lastPlotX))),lastPlotX=point.plotX,point.isInside=chart.isInsidePlot(point.plotX,point.plotY,chart.inverted)):point.isNull=!0;this.closestPointRangePx=closestPointRangePx}}),wrap(SeriesProto,"destroy",function(proceed){if(this.chart.hasParallelCoordinates){var series=this;each(this.chart.axes||[],function(axis){axis&&axis.series&&(erase(axis.series,series),axis.isDirty=axis.forceRedraw=!0)})}proceed.apply(this,Array.prototype.slice.call(arguments,1))}),each(["line","spline"],function(seriesName){wrap(H.seriesTypes[seriesName].prototype.pointClass.prototype,"getLabelConfig",addFormattedValue)})}(Highcharts)});